"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def fun(number):
	if number // 10 == 0:
		return 1 if number % 2 == 0 else 0
	else:
		cnt_even = 1 if number % 2 == 0 else 0
		n = number // 10
		return cnt_even + fun(n)


if __name__ == '__main__':
	usr_input = input('Введите число: ')
	if usr_input.isdigit():
		count_even = fun(int(usr_input))
		print(f'Количество четных и нечетных цифр в числе равно: ({count_even}, {len(usr_input) - count_even})')
	else:
		print('Ваш ввод не соответствует заданным требованиям')
