"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def check_num(lst, even_n=0, odd_n=0):
    if len(lst) == 0:
        print(
            f'Количество четных символов равно: {even_n}', f'Количество нечетных равнo:{odd_n}')
        return
    elif (int(lst[0]) % 2) == 0:
        even_n += 1
    elif (int(lst[0]) % 2) == 1:
        odd_n += 1
    check_num(lst[1:], even_n, odd_n)


check_num(list(input("Введите число")))
