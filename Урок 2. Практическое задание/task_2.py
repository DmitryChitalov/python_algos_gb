"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def number():
    """ Запрос числа """
    try:
        return int(input('Введите число: '))
    except ValueError:
        print('Вы ввели не число.')
        return numbers()


def counting(x, y=0, z=0):
    """ Подсчет четных и нечетных чисел в числе """
    if x == 0:
        print(f'Количество четных чисел в числе равно: {y}. Количество нечетных цифр в числе равно: {z}.')
    else:
        one_number = x % 10
        x = x // 10
        if one_number % 2 == 0:
            y += 1
            return counting(x, y, z)
        else:
            z += 1
            return counting(x, y, z)


q = number()
counting(q)
