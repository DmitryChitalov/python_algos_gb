"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_odd_even(num, counter):
    if num != 0:
        number = num % 10
        if number % 2 == 0:
            counter[0] += 1
        else:
            counter[1] += 1
        count_odd_even(num // 10, counter)
    else:
        print(counter)
        return


try:
    num_from_input = int(input('Введите число:'))
    count_odd_even(num_from_input, [0, 0])
except ValueError:
    print('Вы ввели не число!')
