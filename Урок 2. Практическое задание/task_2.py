"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def evod_count(counts={'even': 0, 'odd': 0}, number=input('Введите натуральное число: ')):
    try:
        if int(number) < 0:
            print('Вы ввели не натуральное число')
            return evod_count(counts={'even': 0, 'odd': 0}, number=input('Введите натуральное число: '))
    except ValueError:
        print('Вы ввели не натуральное число')
        return evod_count(counts={'even': 0, 'odd': 0}, number=input('Введите натуральное число: '))
    if len(number) == 1:
            if int(number[0]) % 2 == 0:
                counts['even'] += 1
            else:
                counts['odd'] += 1
            return print(f' Even: {counts["even"]}, Odd: {counts["odd"]} ')
    else:
        if int(number[0]) % 2 == 0:
            counts['even'] += 1
        else:
            counts['odd'] += 1
        return evod_count(counts, number[1:])


evod_count()
