"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
def even(getted, evens, odds):
    if getted > 0:
        this_try = getted%10
        getted= getted //10
        if this_try%2 == 0:
            evens+=1
            even(getted, evens, odds)
        else:
            odds += 1
            even(getted, evens, odds)
    else:
        return print(f'Четных - {evens}, нечетных - {odds}')





if __name__ == '__main__':
    getted = input("введите число: ")
    try:
        getted= int(getted)
    except ValueError:
        print('Нужно число!')
    even(getted, evens=0, odds= 0)