"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def ev_od(a):
    if a <= 2:
        n = (a % 10)
        if n % 2 == 0:
            even.append(n)
        else:
            odd.append(n)
        l_ev = len(even)
        l_od = len(odd)
        return f'Ваше число содержит {l_ev} четных чисел и {l_od} нечетных цифры'
    n = (a % 10)
    if n % 2 == 0:
        even.append(n)
        a = a // 10
        return ev_od(a)
    else:
        odd.append(n)
    a = a // 10
    return ev_od(a)


a = int(input('Введите любое натуральное число: _'))
even = []
odd = []
print(ev_od(a))