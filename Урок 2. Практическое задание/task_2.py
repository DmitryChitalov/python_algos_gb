"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def numbers(numb, even=0, not_even=0):
    if numb == 0:
        return even, not_even
    else:
        last_number = numb % 10
        numb = numb // 10
        if last_number % 2 == 0:
            even += 1
            return numbers(numb, even, not_even)
        else:
            not_even += 1
        return numbers(numb, even, not_even)


number = int(input('Введите натруальное число:'))
print(f'Количество четных и нечетных цифр: {numbers(number)}')