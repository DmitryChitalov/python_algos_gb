"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def my_fun(n):
    try:
        my_fun.c += 0
    except AttributeError:
        my_fun.c = 0
        my_fun.n = 0
    if (n % 10) % 2:
        my_fun.n += 1
    else:
        my_fun.c += 1
    if n // 10:
        return my_fun(n // 10)
    else:
        return my_fun.c, my_fun.n


while True:
    try:
        ans = int(input('Введите число: '))
    except ValueError:
        ans = - 1
    if ans >= 0:
        break
print(f'Количество четных и нечетных цифр в числе равно: {my_fun(ans)}')
