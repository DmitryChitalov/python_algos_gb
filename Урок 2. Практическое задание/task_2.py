"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even_odd_score(int_string, score=0):
    if len(int_string) > 1:
        i = int(int_string[0]) % 2
        score += i
        return even_odd_score(int_string[1:], score)
    else:
        i = int(int_string[0]) % 2
        score += i
        return score


x = input("введите число: ")
res_odd = even_odd_score(x)
print(f'нечётных: {res_odd}, чётных: {len(x) - res_odd}')
