"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even_or_uneven(string):
    if (int(string) // (10 ** (len(string) - 1))) % 2:
        result = (0, 1)
    else:
        result = (1, 0)
    if len(string) == 1:
        return result
    new_data = even_or_uneven(string[1:])
    return result[0] + new_data[0], result[1] + new_data[1]


while True:
    data = input('Ведите число: ')
    if data.isdigit():
        break
    else:
        print('Введите число!!!')

print(f'Количество четных и нечетных цифр в числе равно: {even_or_uneven(data)}')
