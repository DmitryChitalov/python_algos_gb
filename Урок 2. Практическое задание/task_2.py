"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def rec_numbers_count(number, even_count=0, uneven_count=0):
    if number == 0:
        return print(f'Количество четных и нечетных цифр в числе равно: ({even_count}, {uneven_count})')

    else:
        if number % 2 == 0:
            even_count += 1
        else:
            uneven_count += 1
        rec_numbers_count(number//10, even_count, uneven_count)


try:
    rec_numbers_count(int(input('Введите число: ')))
except ValueError:
    print('Введено некорректное значение, завершение программы')
