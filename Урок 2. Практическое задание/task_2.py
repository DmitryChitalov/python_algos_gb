"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even_not_even(n, x, y):
    if n == 0:
        return x, y
    else:
        if (n % 10) % 2 == 0:
            x += 1
        else:
            y += 1
        return even_not_even(n//10, x, y)


a = int(input('Введите число: '))
print(f'Количество четных и нечетных цифр в числе равно: {even_not_even(a, 0, 0)}')
