"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
def hello_world(num, even, noteven):
    if num == 0:
        print(f'Чётных: {even}, нечётных: {noteven}')
        return
    if (num % 10) % 2 == 0:
        even += 1
    else:
        noteven += 1
    hello_world(num // 10, even, noteven)

my_num = int(input("Укажите натуральное число: "))
even = 0
n_even = 0
hello_world(my_num, even, n_even)