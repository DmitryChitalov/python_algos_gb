"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def calc_num(user_num):
    global even
    global not_even
    if len(user_num) != 0:
        if (int(user_num[0]) % 2) == 0:
            even += 1
        else:
            not_even += 1
        return calc_num(user_num[1:])
    else:
        return print('Количество четных и нечетных цифр в числе равно: ({0}, {1})'.format(even, not_even))


global even
global not_even
even = 0
not_even = 0
user_num = list(input('Введите число'))
calc_num(user_num)
