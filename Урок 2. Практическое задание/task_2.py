"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка: На каждом шаге вам нужно 'доставать' из числа очередную цифру и
смотреть является ли она четной или нечетной. При этом увеличиваем
соответствующий счетчик Пока все числа не извлечены рекурсивные вызовы
продолжаем Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def evens_odds():
    number = None
    evens, odds = 0, 0

    def number_input():
        nonlocal number
        inp = input('Введите число: ')
        if inp.isdigit():
            number = inp
            return
        else:
            print('Вы вместо числа ввели строку (((. Исправьтесь')
            number_input()

    def count(num):
        nonlocal evens, odds
        if num == 0:
            return evens, odds
        else:
            if (num % 10) & 1:
                odds += 1
            else:
                evens += 1
            return count(num // 10)

    number_input()
    number = int(number)
    count(number)
    print(f'Количество четных и нечетных цифр равно: ({evens}, {odds})')


if __name__ == '__main__':
    evens_odds()
