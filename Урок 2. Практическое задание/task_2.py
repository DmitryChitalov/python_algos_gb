"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def recursive_even_cnt():
	num = input("Введите число: ")

	even_cnt = 0
	not_even_cnt = 0
	for n in num:
		#найти функцию деления нацело
		if n in ["0","2","4","6","8"]:
			even_cnt +=1
		else:
			not_even_cnt+=1

	print(f"Количество четных и нечетных цифр в числе равно: ({even_cnt}, {not_even_cnt})")

	return recursive_even_cnt()

print(recursive_even_cnt())

