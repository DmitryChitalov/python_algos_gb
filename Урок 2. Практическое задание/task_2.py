"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

# Почему return result возвращает Null?
# Он же в строчке выше в принт уходит корректно.

def d(boo = True, a = 0, result = [0,0]):
    if boo == True:
        a = input('число ')
    l = len(str(a))
    a = int(a)
    x = a % 10
    a = a // 10
    if x % 2 == 0:
        result[0] = result[0] + 1
    else:
        result[1] = result[1] + 1
    if l == 1:
        #print(result)
        return result
    d(False, a, result)
