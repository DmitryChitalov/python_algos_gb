"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
def count_func(numbers, even_count=0, odd_count=0):
    if numbers == 0:
        return even_count, odd_count
    else:
        even = numbers % 10
        numbers=numbers // 10
        if even % 2 == 0:
            even_count += 1
        else:
            odd_count += 1
    return count_func(numbers, even_count, odd_count)

try:
    number = int(input('Введите набор цифр: '))
except ValueError:
    print('Вы ввели НЕ_число, просьба ввести именно число:')
    number = int(input('Введите набор цифр: '))
print(f'Количество чисел в вашем числе {number} по пропорции (четные, нечетные):  {count_func(number)}')
