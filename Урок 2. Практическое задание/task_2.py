"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def even_cnt(number, cnt_even=0, cnt_odd=0):

    if number //10 == 0:
        if number % 2 == 0:
            cnt_even += 1
        else: cnt_odd += 1
        return print(f'Четных цифр - {cnt_even},нечетных - {cnt_odd}')
    if number % 2 == 0:
        cnt_even += 1
    else:
        cnt_odd += 1
    even_cnt(number//10, cnt_even,cnt_odd)

even_cnt(12345)


