"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def rec_numb(numb, odd_numb = 0, even_numb = 0):
    numb = list(numb)
    if numb == []:
        return print('Количество четных и нечетных цифр в числе равно: ', even_numb, 'и', odd_numb)
    if int(numb[0]) % 2 == 0:
        even_numb += 1
        odd_numb += 0
        return rec_numb(numb[1:], odd_numb, even_numb)
    odd_numb += 1
    even_numb += 0
    return rec_numb(numb[1:], odd_numb, even_numb)

a = input('ведите число: ')
rec_numb(a)
