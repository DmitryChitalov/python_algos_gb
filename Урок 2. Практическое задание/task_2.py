"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
random_list = [i for i in range(1, 10)]


# 1
def select_min(lst):
    for i in lst:
        low = True
        for j in lst:
            if i > j:
                low = False
        if low:
            return i


# 2
def select_min_2(lst):
    low = lst[0]
    for i in lst:
        if i < low:
            low = i
    return low


print(select_min(random_list))
print(select_min_2(random_list))
