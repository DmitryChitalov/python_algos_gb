"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_even_odd(number, counters):
    if number % 2 == 0:
        counters[0] += 1
    else:
        counters[1] += 1
    if number < 10:
        return counters
    return count_even_odd(number // 10, counters)


try:
    a = int(input('Введите число: '))
except ValueError:
    print('Ошибка ввода')
else:
    result = count_even_odd(a, [0, 0])
    print(f'Количество четных цифр - {result[0]}, нечетных - {result[1]}')
