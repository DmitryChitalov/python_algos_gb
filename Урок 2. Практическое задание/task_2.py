"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
def counter(num, even_count, odd_count):
    if num == '':
        return even_count, odd_count
    else:
        for i in range(0, len(num)):
            if int(num[i]) % 2 == 0:
                even_count = even_count + 1
                return counter(num[i + 1:], even_count, odd_count)
            else:
                odd_count = odd_count + 1
                return counter(num[i + 1:], even_count, odd_count)

print(counter('448623', 0, 0))
