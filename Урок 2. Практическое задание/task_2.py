"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем
соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
even = []
odd = []
def even_odd_numbers(number):
    if number < 10:
        if number % 2 == 0:
            odd.insert(0, number)
            return
        else:
            even.insert(0, number)
            return
    else:
        temp = number % 10
        if temp % 2 == 0:
            odd.insert(0, temp)
            return even_odd_numbers(number // 10)
        else:
            even.insert(0, temp)
            return even_odd_numbers(number // 10)


even_odd_numbers(int(input('Введите число: ')))
print(f'Четные числа: {even} \nНечетные числа: {odd}')