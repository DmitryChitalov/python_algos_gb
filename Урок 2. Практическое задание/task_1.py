"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

def calc():
    operation = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if operation == '0':
        print('Программа завершена')
        return
    elif operation in ('+','-','*','/'):
        try:
            print(number(operation))
        except ZeroDivisionError:
            print('На 0 делить нельзя, исправьтесь')
        return calc()

    else:
        print('Данную операцию программа не поддерживает, повторите попытку')
        return calc()


def number(operation):
    try:
        num_1 = int(input('Введите первое число:'))
        num_2 = int(input('Введите первое число:'))
    except ValueError:
        print('Вы вместо числа ввели строку (((. Исправьтесь')
        return number(operation)
    return eval(str(num_1) + operation + str(num_2))


calc()
