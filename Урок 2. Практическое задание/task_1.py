"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

math_opr = ('0', '+', '-', '*', '/')

def message():
	print('Ваш ввод не соответствует заданным требованиям\nПоробуйте еще раз')

def calculator(number1, number2, opr):
	if opr == '+':
		return number1 + number2
	elif opr == '-':
		return number1 - number2
	elif opr == '*':
		return number1 * number2
	elif opr == '/':
		if number2 == 0:
			return None
		return number1 / number2
		

def calculator_interface():
	usr_input_opr = input('Введите операцию (+, -, *, / или 0 для выхода): ')
	if usr_input_opr in math_opr:
		if usr_input_opr == '0':
			return None
		else:
			usr_number1 = input('Введите первое число: ')
			if usr_number1.isdigit():
				usr_number2 = input('Введите второе число: ')
				if usr_number2.isdigit():
					print(calculator(int(usr_number1), int(usr_number2), usr_input_opr))
					calculator_interface()
				else:
					message()
					calculator_interface()
			else:
				message()
				calculator_interface()
	else:
		message()
		calculator_interface()


if __name__ == '__main__':
	calculator_interface()
