"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calculator():
    """
    функция запрашивает у пользователя знак операции и числа, вычисляет и выводит ответ
    и вызывает себя для продолжения. Выход при вводе 0 вместо знака операции.
    """

    try:
        operation = input('Введите знак операции "+", "-", "*", "/", или 0 для завершения: ')
        if operation == '0':
            print('goodbye')
            return None

        assert operation in ("+", "-", "*", "/")

        first_num, second_num = map(float, input('введите два числа через пробел: ').split())
        if operation == "+":
            answer = first_num + second_num
        elif operation == "-":
            answer = first_num - second_num
        elif operation == "*":
            answer = first_num * second_num
        else:
            answer = first_num / second_num
        print(f'ответ: {answer}')
        return calculator()
    except ZeroDivisionError as e:
        print('на 0 делить нельзя')
        return calculator()
    except Exception as e:
        print('ошибка ввода')
        return calculator()


if __name__ == '__main__':
    calculator()
