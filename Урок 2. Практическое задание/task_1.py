"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
#sign = input('Введите операцию (+, -, *, / или 0 для выхода) ')
#a = input('Введите первое число: ')
#b = input('Введите второе число: ')

def calc_r():
    s = input('Введите знак (+,-,*,/): ')
    if s == '0':
        print('Конец')
        return
    if s in ('+', '-', '*', '/'):
        x = int(input("Введите первое число: "))
        y = int(input("Введите второе число: "))

        if s == '+':
            print(x + y)
            return calc_r()
        elif s == '-':
            print(x - y)
            return calc_r()
        elif s == '*':
            print(x * y)
            return calc_r()
        elif s == '/':
            if y != 0:
                print(x / y)
                return calc_r()
            else:
                print("На ноль делить нельзя")
                return calc_r()
    else:
        print("Введен неверный символ")
        return calc_r()

calc_r()
