"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
def func():
    operator = input('Введите арифметический оператор или 0 для выхода:')

    if operator == '0':
        return 'stop'
    else:
        try:
            if operator == operator:
                number1 = int(input())
                number2 = int(input())

                if operator == '+':
                    result = number1 + number2
                    print(result)
                    return func()

                elif operator == '/':
                    try:
                        result = number1 / number2
                        print(result)

                    except ZeroDivisionError:
                        print('Деление на 0 невозможно')
                        return func()

                elif operator == '*':
                    result = number1 * number2
                    print(result)
                    return func()

                elif operator == '-':
                    result = number1 - number2
                    print(result)
                    return func()

        except ValueError:
            print('Вы ввели строку. Попробуйте еще раз')
            return func()

        else:
            print('Введен неверный орифметический оператор')
            return func()

func()

# Проверка деления на 0 меня смущает. Ничего, что несколько блоков try/except в одной функции?
# это не увеличит время исполнения кода?
