"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def rec():
    lst = ['+', '-', '*', '/', '0']

    while True:
        sign = input('Введите операцию (+, -, *, / или 0 для выхода): ')
        if sign not in lst:
            print('Попробуйте еще раз!')
        else:
            break

    if sign == '0':
        return

    while True:
        first_digit = input('Введите первое число: ')
        if first_digit.isdigit():
            first_digit = int(first_digit)
            break
        else:
            print('Попробуйте еще раз!')

    while True:
        second_digit = input('Введите второе число: ')
        if second_digit.isdigit():
            second_digit = int(second_digit)
            break
        else:
            print('Попробуйте еще раз!')

    if sign == '+':
        result = first_digit + second_digit
    elif sign == '-':
        result = first_digit - second_digit
    elif sign == '/':
        if second_digit == 0:
            result = 'Делить на ноль нельзя'
        else:
            result = first_digit / second_digit
    elif sign == '*':
        result = first_digit * second_digit
    print(f'{first_digit} {sign} {second_digit} = {result}')

    rec()


if __name__ == '__main__':
    rec()
