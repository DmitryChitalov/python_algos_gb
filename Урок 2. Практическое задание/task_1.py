"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
def calc():
    data = ['+', '-', '*', '/']
    # запрашиваем знак
    operand = str(input("Введите знак '0' - для выхода, для операций - '+', '-', '*', '/'): "))
    if operand == '0':
        print("Пока-пока")
        return
    # проерку что введено число не делаю, т.к. это не запрошено в задании
    a = int(input("Введите 1-е число: "))
    b = int(input("Введите 2-е число: "))
    if b == 0:
        print("Деление на ноль запрещено")
        calc()
    # выводим результаты
    if operand in data:
        if operand == '+':
            print(f'{a} + {b} = {a + b}')
        elif operand == '-':
            print(f'{a} - {b} = {a - b}')
        elif operand == '*':
            print(f'{a} * {b} = {a * b}')
        else:
            print(f'{a} / {b} = {a / b}')
    # запускаем функцию вновь
    calc()

calc()