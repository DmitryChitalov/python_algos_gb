"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calc():
    sign = input('Введите операцию (+, -, *, / или 0 для выхода): ')

    if sign == '0':
        print('Программа завершена, всего доброго')
    elif sign not in ['+', '-', '*', '/']:
        print('Видимо вы ввели не знак. Исправьтесь\n')
        calc()
    else:
        num_1 = input('Введите первое число: ')
        num_2 = input('Введите второе число: ')

        if sign == '/' and num_2 == '0':
            print('На ноль делить нельзя. Давайте ещё раз\n')
            calc()

        elif num_1.isdigit() and num_2.isdigit():
            print(eval(num_1 + sign + num_2), '\n')
            calc()

        else:
            print('Видимо вы не числа ввели. Давайте заново\n')
            calc()


calc()
