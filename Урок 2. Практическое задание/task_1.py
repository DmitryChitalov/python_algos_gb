"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def operation(user_oper):
    if user_oper in ('+', '-', '/', '*', '0'):
        if user_oper == '0':
            return 'Stop program'
        try:
            user_inp1 = int(input('Inp 1:'))
            user_inp2 = int(input('Inp 2:'))
            data = {
                '*': user_inp1 * user_inp2,
                '+': user_inp1 + user_inp2,
                '/': user_inp1 / user_inp2,
                '-': user_inp1 - user_inp2
            }
            print(data[user_oper])
        except ZeroDivisionError:
            print('Error Zero Division, try again')
        except ValueError:
            print('Need int! Try again!')
    else:
        print('Not in range')

    return operation(input('Oper:'))


print(operation(input('Oper:')))
