"""
7.	Напишите программу, доказывающую или проверяющую, что для множества
натуральных чисел выполняется равенство: 1+2+...+n = n(n+1)/2,
где n - любое натуральное число.
Рекурсия вам нужна для решения левой части выражения.
Полученный результат нужно просто сравнить с результатом в правой.
Пример:
для n = 5
1+2+3+4+5 = 5(5+1)/2
Подсказка:
Правой части в рекурсии быть не должно. Необходимо сравнить результат, который даст рекурсивная ф-ция
со значением, полученным в правой части (здесь нужно просто подставить n и подсчитать)
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def get_sum(lst_obj):
    """Простая рекурсия"""
    # базовый случай!!!
    if len(lst_obj) == 1:
        return lst_obj[0]
    else:
        # шаг рекурсии
        return lst_obj[0] + get_sum(lst_obj[1:])


print(get_sum([1, 2, 3]))
print(get_sum([1, 2, 3, 4, 5]))
print(get_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))
print(get_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))

a = 1 + 2 + 3
b = 1 + 2 + 3 + 4 + 5
c = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10
d = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15

A = 3 * (3 + 1) / 2
B = 5 * (5 + 1) / 2
C = 10 * (10 + 1) / 2
D = 15 * (15 + 1) / 2

print(a, A)
print(b, B)
print(c, C)
print(d, D)

"""
def recur_method(numb):
    if numb == 1:
        return numb
    else:
        return recur_method(numb - 1) + numb


try:
    NUMB = int(input("Введите число: "))
    if recur_method(NUMB) == NUMB * (NUMB + 1) / 2: #  Правая часть вынесена из рекурсии
        print('Равенство верно')
except ValueError:
    print("Вы вместо числа ввели строку (((. Исправьтесь")

"""
"""
def get_sum_of_set(base):
    return base if base == 1 else base + get_sum_of_set(base - 1)


n = 3
print(f'Is 1+2+...+{n} = {n}({n}+1/2? \nAnswer: '
      f'{get_sum_of_set(n) == n * (n + 1) / 2} (Sum = {get_sum_of_set(n)})')
"""
