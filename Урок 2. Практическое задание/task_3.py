"""
3.	Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
Например, если введено число 3486, то надо вывести число 6843.

Подсказка:
На каждом шаге вам нужно 'доставать' из числа одну цифру. Пока все цифры не извлечены -
рекурсивные вызовы продолжаем. Условие завершения рекурсии - все цифры извлечены.

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321

!!! Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321
"""


def num_flip(num_in):
    rest_part, full_part = divmod(num_in, 10)  # целое от деления на 10 пишем в rest.., остаток от деления - в full..
    if rest_part == 0:  # для окончания и вывода первой цифры в числе или для случая ввода одной цифры
        return str(full_part)
    else:
        return str(full_part) + str(num_flip(rest_part))  # вызов функции num_flip из тела самой функции


try:  # валидация через try, т.к. через if-else - это антипатернелли
    number = int(
        input('Пользователь(user), а не введёте ли вы ЦЕЛОЕ положительное число из нескольких цифр, пожалуйста: '))
    print(f'Перевернутое число равно: {num_flip(number)}')
except ValueError:
    print('Видимо было введено не число')
except NameError:
    print('Перевернуть не удалось')
# видимо это и есть рекурсия
