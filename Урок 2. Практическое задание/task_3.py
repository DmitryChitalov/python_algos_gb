"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
"""


# Рекурсия
def rev_num(num):
    """
    Функция возвращает реверс числа

    num: число, которое требуется перевернуть
    """
    if len(str(num)) < 2:
        return num
    else:
        return f'{num % 10}{rev_num(num // 10)}'


print(f'Перевернутое число: {rev_num(int(input("Введите число: ")))}')


# Рекурсия ООП
class ReversNumber:
    def __init__(self):
        self.number = list(input('Введите число: '))
        self.number_reverse = []

    def revers(self):
        """
        Метод возвращает реверс числа

        num: число, которое требуется перевернуть
        """
        if len(self.number) == 0:
            return print(f"Перевернутое число: {''.join(self.number_reverse)}")
        else:
            return self.number_reverse.append(self.number.pop()), self.revers()


item = ReversNumber()
item.revers()
