"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
company = [('dreateam', 250000), ('frontier', 125000), ('galaxy', 380000), ('greenray', 200000), ('goldier',500000)]
def big_company(company):
    company.sort(key=lambda x: x[1], reverse=True)
    return company[0:3]                             # сложность O(NlogN)

print(big_company(company))

def big_company2(company):
    first = max(company, key=lambda x: x[1])
    company.remove(first)
    second = max(company, key=lambda x: x[1])
    company.remove(second)
    third = max(company, key=lambda x: x[1])
    return (first, second, third)                    # сложность O(N)

print(big_company2(company))

'''Предпочтительней первый вариант, поскольку в нем только один раз вызывается метод соритровки словаря. 
 Во втором варианте неоднократно вызывается функция поиска максимального значения. А тажке многократно 
 вызывается метод remove списка'''