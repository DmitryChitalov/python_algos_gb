"""
Задание 1.

Докажите, что словари обрабатываются быстрее, чем списки.

Реализуйте две функции, в первой нужно заполнить элементами список, во второй-словарь
Сделайте замеры времени выполнения каждой из функций

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор и пусть она считает время
И примените ее к двум своим функциям.
"""
""" Сделал декоратор, каторый обернул функцию, в которой замеряется время начала испытания,
затем выполняется наша целевая функция - по заполнению(списка или словаря), и, затем вычисяется 
время окончания замера (Для объективности, я заполнил оба контейнера 10 миллионами элементов)"""
import time

first_dict = {}
first_list = []


def decorator_function(func):
    def check_time(*args):
        start_val = time.time()
        func(*args)
        end_val = time.time()
        return end_val - start_val

    return check_time


@decorator_function
def dict_fill(my_dict: dict):
    for i in range(1, 10000000):
        my_dict[i] = i


@decorator_function
def list_fill(my_list: list):
    for i in range(1, 10000000):
        my_list.append(i)


print("Время заполнения словаря: ", dict_fill(first_dict))
print("Время заполнения списка: ", list_fill(first_list))
"""
Время заполнения словаря:  1.3930795192718506
Время заполнения списка:  1.3440771102905273
Словари зопалняются дольше, т.к затрачивается определённое время для генерации хэш-значений для ключей словаря
"""
