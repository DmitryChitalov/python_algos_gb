"""
Задание 4.
Реализуйте скрипт "Кэширование веб-страниц"

Функция должна принимать url-адрес и проверять
есть ли в кэше соответствующая страница, если нет, то вносит ее в кэш

Подсказка: задачу решите обязательно с применением 'соленого' хеширования
Можете условжнить задачу, реализовав ее через ООП
"""

import hashlib

my_hash_list = []  # Список с хешами.


def save_url():
    """
В функции производится ввод ссылки, хеширование ( в качестве соли, перевернутая ссылка )
проверка ее на уникальность. Уникальные значения хешей помещяется в список 'хеш-таблицу'.
    :return: возращает функция список 'хеш-таблицу'.
    """
    print('-Ввод url-')

    coding_value = input(' Введите url : ')

    solt = str(reversed(coding_value))  # здесь соль это перевернутая url

    hash_coding_value = hashlib.sha256(coding_value.encode() + solt.encode()).hexdigest()  # Хэшируем ссылку.

    # Проверяем наличие хэша в базе, если нет, добавить. Есть, запуск функции снова.
    if hash_coding_value in my_hash_list:
        print('Данная ссылка есть в базе. Введите новую.')
        save_url()
    else:
        # Добавление хеша в список "таблицу" и узнаем будем вводить следующу ссылку или нет.
        my_hash_list.append(hash_coding_value)
        print('Ссылка добавлена.')
        q = input(
            'Хотите продолжить ввод ? Введите 1 , все остальные значения приведут к прекращению работы программы.')
        if q == '1':
            save_url()
        else:
            return my_hash_list


save_url()

print(my_hash_list)  # Выводится список  хешей.


