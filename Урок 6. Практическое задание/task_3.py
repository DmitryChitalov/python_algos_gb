"""
Задание 3 *.
Сделать профилировку для скриптов с рекурсией и сделать описание,
можно ли так профилировать и есть ли 'подводные камни' в профилировании?
Придумать как это решить!
Есть очень простое решение!
"""

from memory_profiler import profile


@profile
def ch_mem(number):
    def factorial(n):
        if n == 0:
            return 1
        else:
            return factorial(n - 1) * n

    print(f'Факториал числа - {number} равен {factorial(number)}')


ch_mem(500)

"""
C:/Users/DENISF/Documents/GitHub/python_algos_gb/Урок 6. Практическое задание/task_3.py"
Факториал числа - 500 равен

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    12     19.6 MiB     19.6 MiB           1   @profile
    13                                         def check_memory(number):
    14     20.5 MiB      1.0 MiB         502       def factorial(n):
    15     20.5 MiB      0.0 MiB         501           if n == 0:
    16     20.5 MiB      0.0 MiB           1               return 1
    17                                                 else:
    18     20.5 MiB      0.0 MiB         500               return factorial(n - 1) * n
    19     20.5 MiB      0.0 MiB           1       print(f'Факториал числа - {number} равен {factorial(number)}')


Так как профилировка перед рекурсией будет постоянно вызываться. 
Оборачиваем рекурсию в функцию, для которой и будем делать замеры.
"""
