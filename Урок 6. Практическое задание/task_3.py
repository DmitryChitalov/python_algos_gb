"""
Задание 3 *.
Сделать профилировку для скриптов с рекурсией и сделать описание,
можно ли так профилировать и есть ли 'подводные камни' в профилировании?
Придумать как это решить!
Есть очень простое решение!
"""

# привела пример переводчика из одной системы исчисления в др (в данном случае из 16 в 10)
# реализована с помощью рекурсии
# при вызове профилировщика основной функции получила в выводе 12 таблиц
# но если написать обертку для основной функции, то получится только одна таблица


from memory_profiler import profile

m = {
    '0': 0,
    '1': 1,
    '2': 2,
    '3': 3,
    '4': 4,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 8,
    '9': 9,
    'A': 10,
    'B': 11,
    'C': 12,
    'D': 13,
    'E': 14,
    'F': 15
}


def calc(a, base=16, res=0, rank=1) -> int:
    if len(a) == 0:
        return res
    return calc(a[:-1], base, res + m[a[-1]] * rank, rank * base)


a = '1FFFBCDEFF3'


@profile
def calc_1(x):
    return calc(a, base=16, res=0, rank=1)


if __name__ == "__main__":
    print(calc_1(a))
