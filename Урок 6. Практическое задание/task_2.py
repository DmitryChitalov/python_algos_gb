"""
Задание 2.
Предложите фундаментальные варианты оптимизации памяти
 и доказать (наглядно, кодом, если получится) их эффективность

Например, один из вариантов, использование генераторов
"""
"""Из форумов и статей я узнал, что можно управлять сборщиком мусора в python. 
Мне кажется , это очень важно.
"""
import gc
from memory_profiler import profile
print(gc.get_threshold()) # вывод пороговых значения для сборщика мусора
gc.set_threshold(900, 15, 15)
print(gc.get_threshold()) # измение пороговых значения для сборщика мусора

"""При использовании циклических ссылок, освобождение памяти не происходит,
в этом случае можно выполнять запуск сбора мусора по событию или по времени. К примеру.."""
@profile()
def qwe():
    list_ = list(range(10*8))
    list_.append(list)
    return list_


@profile()
def main():
    print('Создадим мусор')
    for i in range(4):
        qwe()

    print("Утилизация")
    n = gc.collect()
    print("Количество утилизированных объектов:", n)
    print("Количество не утилизированных объектов:", gc.garbage)

main()