"""
Задание 2.
Предложить еще какие-гибудь варианты (механизмы, библиотеки) оптимизации и
доказать (наглядно, кодом) их эффективность
"""

"""
Нашел интересную статью на хабре https://habr.com/ru/post/455722/, сдесь описавются различные методы оптимизации кода и
подробно раписываются сколько место занимет тот или иной объект.
Также приведены примеры с использованием класса  recordclass, который
практически во всем идентичен tuple, но также поддерживает присваивания. На его основе создаются подклассы, которые
практически во всем идентичны namedtuples, но также поддерживают присваивание новых значений полям (не создавая новых
экземпляров). Функция recordclass подобно функции namedtuple позволяет автоматизировать создание таких классов:

 >>> Point = recordclass('Point', ('x', 'y', 'z'))
 >>> ob = Point(1, 2, 3)
 
 Экземпляры класса имеют аналогичную стуктуру, что и tuple, но только без PyGC_Head:

Поле	        Размер (байт)
PyObject_HEAD	    16
ob_size	            8
x	                8
y	                8
y	                8
ВСЕГО:	            48

x, y, z это пример координат в 3-х мерном измерении

А tuple будет занимать столько места
Поле	           Размер (байт)
PyGC_Head	        24
PyObject_HEAD	    16
ob_size	            8
[0]	                8
[1]	                8
[2]	                8
ВСЕГО:	            72

"""
