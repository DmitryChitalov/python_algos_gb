"""
Задание 1.

Выполните профилирование памяти в скриптах
Проанализировать результат и определить программы с
наиболее эффективным использованием памяти.

Примечание: Для анализа возьмите любые 1-5 ваших разных скриптов!.
Сделать их разные реализации.

Можно взять задачи с курса Основ
или с текущего курса Алгоритмов

Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.

ВНИМАНИЕ: ЗАДАНИЯ, В КОТОРЫХ БУДУТ ГОЛЫЕ ЦИФРЫ ЗАМЕРОВ (БЕЗ АНАЛИТИКИ)
БУДУТ ПРИНИМАТЬСЯ С ОЦЕНКОЙ УДОВЛЕТВОРИТЕЛЬНО

Попытайтесь дополнительно свой декоратор используя ф-цию memory_usage из memory_profiler
С одновременным замером времени (timeit.default_timer())!
"""

from memory_profiler import profile

"""
# Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
"""


@profile()
def file_work():
    with open('numbers.txt', 'w+', encoding='utf-8') as numbers:
        numbers.write(input('Введите набор чисел через пробел:  \n'))
        numbers.seek(0)
        for el in numbers:
            el = el.split()
            sum_ = 0
            for i in el:
                i = int(i)
                sum_ += i
            print(f'\nСумма данных чисел равна {sum_}', file=numbers)
    print(f'Сумма данных чисел равна {sum_}')


file_work()
"""
Python 3.9.0
Разрядность ОС 64
Для запуска программы выделено 19.7 МiB
Далее инкремент во всех операциях равен 0 оптимизация не требуется
Введите набор чисел через пробел:  
23 45 67 85 87 
Сумма данных чисел равна 307
Filename: C:\Users\kazan\PycharmProjects\Geekbrains_lessons\python_algos_gb\Урок 6. Практическое задание\task_1.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    32     19.7 MiB     19.7 MiB           1   @profile()
    33                                         def file_work():
    34     19.7 MiB      0.0 MiB           1       with open('numbers.txt', 'w+', encoding='utf-8') as numbers:
    35     19.7 MiB      0.0 MiB           1           numbers.write(input('Введите набор чисел через пробел:  \n'))
    36     19.7 MiB      0.0 MiB           1           numbers.seek(0)
    37     19.7 MiB      0.0 MiB           2           for el in numbers:
    38     19.7 MiB      0.0 MiB           1               el = el.split()
    39     19.7 MiB      0.0 MiB           1               sum_ = 0
    40     19.7 MiB      0.0 MiB           6               for i in el:
    41     19.7 MiB      0.0 MiB           5                   i = int(i)
    42     19.7 MiB      0.0 MiB           5                   sum_ += i
    43     19.7 MiB      0.0 MiB           1               print(f'\nСумма данных чисел равна {sum_}', file=numbers)
    44     19.7 MiB      0.0 MiB           1       print(f'Сумма данных чисел равна {sum_}')

"""