"""
2.	Написать программу сложения и умножения двух шестнадцатеричных чисел.
При этом каждое число представляется как массив, элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections
Для лучшее освоения материала можете даже сделать несколько решений этого задания,
применив несколько коллекций из модуля collections
Также попробуйте решить задачу вообще без collections и применить только ваши знания по ООП
(в частности по перегрузке методов)
"""
# Ломал голову и до сих пор не понял как использовать defaultdict да и reduce тут тоже непонятно зачем ?
# Но программа работает =)
from functools import reduce

user_input1 = input("Введите первое число в шестнадцатеричном формате ")
user_input2 = input("Введите второе число в шестнадцатеричном формате ")
print(f"Введенные данные - {list(user_input1)}")
print(f"Введенные данные - {list(user_input2)}")


def reducer_func(el_prev, el):
    res_add = hex(el_prev + el)
    res_mult = hex(el_prev * el)
    return print(f"Сумма чисел - {list(res_add[2:].swapcase())}",
                 f"Произведение чисел - {list(res_mult[2:].swapcase())}")


reduce(reducer_func, [int(user_input1, 16), int(user_input2, 16)])
