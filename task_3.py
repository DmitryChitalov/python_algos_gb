"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

# -------------- 1 вариант ----------------


def sort_dict(my_dict):
    for i in range(len(my_dict)):
        val = i
        for j in range(i + 1, len(my_dict)):
            if my_dict[j][1] > my_dict[val][1]:
                val = j
        my_dict[i], my_dict[val] = my_dict[val], my_dict[i]
    return my_dict[0:3]


company = {
    'A': 1000,
    'B': 2000,
    'C': 3000,
    'D': 4000,
    'E': 5000,
    'F': 6000
}

my_list = list(company.items())
sort_list = sort_dict(my_list)
for i in sort_list:
    print(i[0], '-', i[1])

# -------------- 2 вариант ----------------

print('*' * 10)

my_list.sort(key=lambda i: i[1], reverse=True)
for i in range(3):
    print(my_list[i][0], '-', my_list[i][1])


'''
Второй вариант лучше, т.к. сложность алгоритма O(N*LogN), в отличие от O(N^2) первого варианта
'''