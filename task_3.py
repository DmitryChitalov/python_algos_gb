"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
сompany = {'ИП Петров': 2000, 'ИП Иванов': 9581, 'ИП Смирнов': 2300, 'ИП Сидоров': 9586, 'ИП Зуев': 10}


def sort_list_3(list_company):
    for a in range(len(list_company)):
        max_profit_index = a
        for b in range(a + 1, len(list_company)):
            if list_company[b][1] > list_company[max_profit_index][1]:
                max_profit_index = b
        list_company[a], list_company[max_profit_index] = list_company[max_profit_index], list_company[a]
    return list_company[0:3]


list_company_1 = list(сompany.items())
print(list_company_1)
for i in sort_list_3(list_company_1):
    print(i[0], ':', i[1])

print('*' * 20)

list_company_1 = list(сompany.items())
list_company_1.sort(key=lambda i: i[1], reverse=True)
for i in range(3):
    print(list_company_1[i][0], ':', list_company_1[i][1])

#"Лучший вариант второй, т.к. первый вариант O(N^2), а второй O(N*logN) и он быстрее"
