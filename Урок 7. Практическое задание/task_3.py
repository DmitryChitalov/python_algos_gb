"""
3. Массив размером 2m + 1, где m – натуральное число, заполнен случайным образом.
Найдите в массиве медиану. Медианой называется элемент ряда, делящий его на
две равные части: в одной находятся элементы, которые не меньше медианы,
в другой – не больше медианы.

Задачу можно решить без сортировки исходного
массива.

Но если это слишком сложно, то используйте метод сортировки,
который не рассматривался на уроках: Шелла, Гномья, ...
[]
arr[m]
from statistics import median

"""
import statistics as st
list_ = [9, 8, 4, 5, 6, 1, 7, 2, 0, 11, 0, 120, 52]
"""
По возрастанию
1. 8 9 4 5 6 i = 0 i = 1
2. I = 2    8 4 9 5 6 i = 1
"""


def gnome_sort(arg):
    """
    Нахождение медианы построено на алгоритме 'Гномья сортировка'
    Он смотит на текущий и предыдущий. Если они в правльном порядке то шагаем дальше,
    если нет, то меням их местами, и отходим на шаг незад.Если нет предыдущего, то шагаем вперед,
    если нет следующего, то конец
    :param arg:
    :return:
    """
    if (len(arg) - 1) % 2 != 0:
        return print('Последовательность четная, необходимо подвать нечетную последовательность')

    i = 1
    while i != len(arg):
        if arg[i - 1] <= arg[i]:  # нулевой меньше первого
            i += 1
            if i == len(arg):
                break
        else:
            arg[i - 1], arg[i] = arg[i], arg[i - 1]
            i -= 1
            if i == 0:
                i += 1
    return arg

print(f'Поступившая последовательности.     {list_} \nОтсортированная последовательность. {gnome_sort(list_)} '
      f'\nМедиана этой последовательности, это {gnome_sort(list_)[(len(list_) - 1)//2]}')

print(f'Проверка {st.median(list_)}')