"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы. Сортировка должна быть реализована в
виде функции. Обязательно доработайте алгоритм (сделайте его умнее).

Идея доработки: если за проход по списку не совершается ни одной сортировки,
то завершение
Обязательно сделайте замеры времени обеих реализаций
и обосновать дала ли оптимизация эффективность

Подсказка: обратите внимание, сортируем не по возрастанию, как в примере,
а по убыванию
"""

import random
import timeit


def bub_sort(our_list):
    k = 1
    while k < len(our_list):
        for i in range(len(our_list) - k):
            if our_list[i] < our_list[i+1]:
                our_list[i], our_list[i+1] = our_list[i+1], our_list[i]
        k += 1
    return our_list


def bub_sort_new(our_list):
    k = 1
    l = False
    while k < len(our_list):
        for i in range(len(our_list) - k):
            if our_list[i] < our_list[i+1]:
                our_list[i], our_list[i+1] = our_list[i+1], our_list[i]
                l = False
        if l:
            break
        k += 1
    return our_list


list_sort = [random.randint(-100, 100) for _ in range(1000)]

print(list_sort)

print(timeit.timeit("bub_sort(list_sort[:])",
                    setup="from __main__ import bub_sort, list_sort",
                    number=100))

print(timeit.timeit("bub_sort_new(list_sort[:])",
                    setup="from __main__ import bub_sort_new, list_sort",
                    number=100))

print(bub_sort(list_sort))

"""
Результат:

[-56, -8, 65, -74, 96, -93, -34, 6, 45, -55, -19, -71, 29, 74, -76, 90, -25, -8, 48, -39, 7, -82, 44, 60, -63, 64, 15, 99, -63, 49, -32, -65, -7, -50, -49, -74, -8, 62, -59, -66, 98, 58, -44, 96, 68, 23, -45, -92, 99, -9, 56, -64, 7, 70, -94, 79, -28, 99, -48, 40, 78, -34, -64, -98, -69, 22, 65, -74, -7, -44, -89, 32, 16, 5, 34, -50, 63, 24, -83, 15, -24, -55, 56, -28, 17, -54, 78, -28, 49, 16, 41, -51, -22, -62, -51, -94, -22, -29, -4, -63, -7, -26, -53, -18, -83, 47, 6, 89, -47, -39, 97, 3, 41, -20, -27, 38, -36, 43, 19, 63, 28, -12, -60, -54, 56, 89, 43, -62, 36, 81, -47, -41, 5, -30, 90, 12, 50, 2, 36, 55, 20, -69, 30, 13, -77, -35, -77, 98, 36, 64, 38, 92, -95, -19, 11, 16, 40, -88, 91, -61, 49, -89, 94, -30, -28, -62, -55, -89, -15, -80, 19, -52, 22, -65, 70, -63, 51, -24, -25, 33, 29, -33, -20, 34, 63, -4, 55, 6, 63, 2, -47, 25, 51, -63, -60, 88, 20, 75, 88, -33, 41, -68, 85, -79, 15, -32, 51, -22, -90, 96, 73, 30, -63, 50, -41, -61, -29, 77, 86, -84, 48, -58, 24, 42, -2, -21, 62, 24, -7, -85, 81, -10, -43, 42, 36, -35, 35, -4, 77, -73, 1, -66, -11, -15, 55, 67, -41, 51, 10, -90, 28, -87, 5, -78, 92, 18, 29, 44, 19, -98, 88, -5, -26, 9, -62, 99, 85, 28, -91, -52, -100, -100, -36, 50, 66, 64, -56, 87, -61, -50, 95, 71, 5, -43, -99, -9, 9, -32, -13, 64, 37, -57, -100, 83, 83, 29, 32, -53, 96, 34, 93, -68, -39, 19, 38, 52, 58, 37, -12, 36, 65, 49, -13, 59, -74, -29, -23, -56, 75, 77, -86, 5, 34, -51, 48, -51, 9, -41, 40, 51, 4, -66, -93, 70, -82, -46, -67, 69, -15, 9, -2, -95, -67, 19, -81, 20, -95, -38, 88, 50, -57, 64, -93, 76, -81, 63, -90, -27, -71, -68, -79, 13, -11, 39, 64, 13, 20, 66, 73, 24, 18, 90, -29, -37, 80, 39, -53, -62, -91, -79, 3, 27, -23, -86, 17, 45, 39, -58, -72, 6, 14, -96, -47, -71, 51, 37, 97, -77, 58, -93, -36, 51, 23, -90, 17, 11, 8, 12, 96, 14, -52, -20, -15, -50, 83, 28, 47, 77, -21, -10, -56, -64, 22, -74, 14, -75, 61, 91, 57, -81, -47, -27, 47, 26, 51, -23, -97, 10, -58, -42, -13, 19, -26, 60, -22, 78, -25, -26, 33, 33, 28, 5, 18, -55, -10, 96, 23, 83, 30, 60, -38, 45, -36, 16, 22, 68, -87, 45, 94, 89, -76, 98, 100, 83, 63, -7, 84, -79, 67, -95, 87, 12, 94, -26, -5, 96, -66, 95, 84, 49, -20, -60, 22, 46, 13, -46, 14, 45, 70, 15, -20, -71, 59, 60, -34, -33, 3, -33, -10, 29, 94, 2, 82, -61, 56, 69, -63, 74, -56, -87, 39, -75, 47, 36, 16, -88, -99, -87, -88, 25, 65, -55, 34, 66, -47, -27, 50, -84, 52, 90, -71, 83, -77, 45, -85, -14, -23, -29, 59, -28, -91, 90, 25, -27, -20, 44, 64, -46, 48, -63, 9, -44, -32, -43, 57, -48, -90, 47, -13, 78, 79, -9, -48, 2, 63, 72, 70, 1, -10, 36, -93, 81, -40, -12, 17, -58, -44, 94, 22, 69, -56, 49, -74, -7, 88, 41, 18, -43, 39, 46, -56, 77, -30, 81, 48, 4, 88, 7, -70, 96, -6, 39, -14, -26, -47, -72, 47, -81, 16, 31, 14, -82, -49, 75, 38, -18, -27, -15, -89, -24, 0, -27, 53, 40, 26, -53, 91, -41, 44, 80, 58, -97, 20, 35, -73, 52, -33, -29, -97, -30, -18, 89, 97, -6, 5, -48, -12, -31, 24, 40, 100, 93, -67, 54, -51, -40, 22, 87, 64, 9, 41, 60, 85, 72, 2, -34, 32, -30, 64, 24, 4, -59, -44, -39, -5, 21, -30, -30, -60, -96, 57, 32, 54, 67, 36, 48, 100, 38, -99, 1, 93, 20, 93, -55, 13, 35, 81, 26, 98, 51, -57, 17, -5, 86, 10, 24, -31, -91, -47, -61, 28, -41, -97, 54, 14, -9, 33, -12, 42, -30, 65, 52, -68, 97, -99, -97, 73, 84, 100, 25, 19, 78, -36, -67, 15, 99, -74, 59, -92, 23, -52, 14, 7, -27, 57, 79, 2, -1, -84, 58, -49, 12, 63, 68, -71, 100, -42, -39, -72, -41, -4, 14, 64, -88, -7, 83, 63, 51, -32, 32, 65, -76, 0, -36, -29, -49, -12, 64, 9, 75, -26, 24, 58, 0, 45, -46, -55, -91, 67, 11, 86, 10, 97, 85, 5, 98, 22, 41, 50, -70, -29, 62, -44, 24, 53, 26, -4, 7, -31, -22, 99, 94, 56, -52, -22, 92, -37, -50, 64, 30, 2, -91, -59, -54, 69, 34, 18, 21, 60, -36, 86, -14, 70, -10, 45, 58, 95, 5, 100, 18, 91, -10, -74, -74, -84, 32, 48, 63, 19, -76, -81, 11, 71, -59, -21, 55, 21, 23, -66, 11, -99, -17, 68, 30, 5, -70, 93, -98, 54, 18, 84, -89, -67, -52, -45, -41, 86, 61, 63, 57, -67, 44, 7, 40, 4, 1, -8, -1, -55, 24, -30, -94, 88, 1, 37, 27, -9, 2, -27, -53, 18, -66, 78, -69, -45, 58, -42, -14, -66, -96, -59, 60, 3, -5, -66, 16, -68, -34, -78, 59, -100, 88, 78, -20, 4, -49, -65, -16, -56, 90, -84, -36, 62, -79, -17, -80, -73, -86, -31, 66, -53, 37, -59, -15, 54, -48, 45, 89, -50, -48, -18, 52, 41, 6, -79, -22, -54, -28, -1, 74, 62, 41, 99, -33, -18, 96, 79, 22, -89, 33, 82, 55, 33, -45, 16, -50, -78, 53, -28, 27, 72, 54, -14, 81, 99, -84, -28, 85, 72, -7]
10.104208265
10.148002298999998
[100, 100, 100, 100, 100, 100, 99, 99, 99, 99, 99, 99, 99, 99, 98, 98, 98, 98, 98, 97, 97, 97, 97, 97, 96, 96, 96, 96, 96, 96, 96, 96, 96, 95, 95, 95, 94, 94, 94, 94, 94, 94, 93, 93, 93, 93, 93, 92, 92, 92, 91, 91, 91, 91, 90, 90, 90, 90, 90, 90, 89, 89, 89, 89, 89, 88, 88, 88, 88, 88, 88, 88, 88, 87, 87, 87, 86, 86, 86, 86, 86, 85, 85, 85, 85, 85, 84, 84, 84, 84, 83, 83, 83, 83, 83, 83, 83, 82, 82, 81, 81, 81, 81, 81, 81, 80, 80, 79, 79, 79, 79, 78, 78, 78, 78, 78, 78, 78, 77, 77, 77, 77, 77, 76, 75, 75, 75, 75, 74, 74, 74, 73, 73, 73, 72, 72, 72, 72, 71, 71, 70, 70, 70, 70, 70, 70, 69, 69, 69, 69, 68, 68, 68, 68, 67, 67, 67, 67, 66, 66, 66, 66, 65, 65, 65, 65, 65, 65, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 62, 62, 62, 62, 62, 61, 61, 60, 60, 60, 60, 60, 60, 60, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 56, 56, 56, 56, 56, 55, 55, 55, 55, 55, 54, 54, 54, 54, 54, 54, 53, 53, 53, 52, 52, 52, 52, 52, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 50, 50, 50, 50, 50, 50, 49, 49, 49, 49, 49, 49, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 46, 46, 45, 45, 45, 45, 45, 45, 45, 45, 45, 44, 44, 44, 44, 44, 43, 43, 42, 42, 42, 41, 41, 41, 41, 41, 41, 41, 41, 40, 40, 40, 40, 40, 40, 39, 39, 39, 39, 39, 39, 38, 38, 38, 38, 38, 37, 37, 37, 37, 37, 36, 36, 36, 36, 36, 36, 36, 36, 35, 35, 35, 34, 34, 34, 34, 34, 34, 33, 33, 33, 33, 33, 33, 32, 32, 32, 32, 32, 32, 31, 30, 30, 30, 30, 30, 29, 29, 29, 29, 29, 28, 28, 28, 28, 28, 28, 27, 27, 27, 26, 26, 26, 26, 25, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 22, 22, 22, 22, 22, 22, 22, 22, 22, 21, 21, 21, 20, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 11, 11, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 9, 8, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, -1, -1, -1, -2, -2, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -6, -6, -7, -7, -7, -7, -7, -7, -7, -7, -8, -8, -8, -8, -9, -9, -9, -9, -9, -10, -10, -10, -10, -10, -10, -10, -11, -11, -12, -12, -12, -12, -12, -12, -13, -13, -13, -13, -14, -14, -14, -14, -14, -15, -15, -15, -15, -15, -15, -16, -17, -17, -18, -18, -18, -18, -18, -19, -19, -20, -20, -20, -20, -20, -20, -20, -21, -21, -21, -22, -22, -22, -22, -22, -22, -22, -23, -23, -23, -23, -24, -24, -24, -25, -25, -25, -26, -26, -26, -26, -26, -26, -26, -27, -27, -27, -27, -27, -27, -27, -27, -27, -28, -28, -28, -28, -28, -28, -28, -28, -29, -29, -29, -29, -29, -29, -29, -29, -30, -30, -30, -30, -30, -30, -30, -30, -30, -31, -31, -31, -31, -32, -32, -32, -32, -32, -33, -33, -33, -33, -33, -33, -34, -34, -34, -34, -34, -35, -35, -36, -36, -36, -36, -36, -36, -36, -36, -37, -37, -38, -38, -39, -39, -39, -39, -39, -40, -40, -41, -41, -41, -41, -41, -41, -41, -41, -42, -42, -42, -43, -43, -43, -43, -44, -44, -44, -44, -44, -44, -45, -45, -45, -45, -46, -46, -46, -46, -47, -47, -47, -47, -47, -47, -47, -47, -48, -48, -48, -48, -48, -48, -49, -49, -49, -49, -49, -50, -50, -50, -50, -50, -50, -50, -51, -51, -51, -51, -51, -52, -52, -52, -52, -52, -52, -53, -53, -53, -53, -53, -53, -54, -54, -54, -54, -55, -55, -55, -55, -55, -55, -55, -55, -56, -56, -56, -56, -56, -56, -56, -56, -57, -57, -57, -58, -58, -58, -58, -59, -59, -59, -59, -59, -59, -60, -60, -60, -60, -61, -61, -61, -61, -61, -62, -62, -62, -62, -62, -63, -63, -63, -63, -63, -63, -63, -63, -64, -64, -64, -65, -65, -65, -66, -66, -66, -66, -66, -66, -66, -66, -67, -67, -67, -67, -67, -67, -68, -68, -68, -68, -68, -69, -69, -69, -70, -70, -70, -71, -71, -71, -71, -71, -71, -72, -72, -72, -73, -73, -73, -74, -74, -74, -74, -74, -74, -74, -74, -74, -75, -75, -76, -76, -76, -76, -77, -77, -77, -77, -78, -78, -78, -79, -79, -79, -79, -79, -79, -80, -80, -81, -81, -81, -81, -81, -82, -82, -82, -83, -83, -84, -84, -84, -84, -84, -84, -85, -85, -86, -86, -86, -87, -87, -87, -87, -88, -88, -88, -88, -89, -89, -89, -89, -89, -89, -90, -90, -90, -90, -90, -91, -91, -91, -91, -91, -91, -92, -92, -93, -93, -93, -93, -93, -94, -94, -94, -95, -95, -95, -95, -96, -96, -96, -97, -97, -97, -97, -97, -98, -98, -98, -99, -99, -99, -99, -99, -100, -100, -100, -100]

По времени разница незначительная
Вероятность наступления такой ситуации когда массив с заданными параметрами
не будет нуждаться в сортировке - практически нулевая

Однако, при этом, при каждом запуске мы будем лишний раз производить проверку условия (if l:)
И в итоге производить ненужную операцию

"""