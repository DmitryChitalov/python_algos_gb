"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы. Сортировка должна быть реализована в
виде функции. Обязательно доработайте алгоритм (сделайте его умнее).

Идея доработки: если за проход по списку не совершается ни одной сортировки,
то завершение
Обязательно сделайте замеры времени обеих реализаций
и обосновать дала ли оптимизация эффективность

Подсказка: обратите внимание, сортируем не по возрастанию, как в примере,
а по убыванию
"""

import timeit
import random


def bubble_sort(lst_obj):
    n = 1
    while n < len(lst_obj):
        for i in range(len(lst_obj)-n):
            if lst_obj[i] < lst_obj[i+1]:
                lst_obj[i], lst_obj[i+1] = lst_obj[i+1], lst_obj[i]
        n += 1
    return lst_obj


def bubble_sort_mod(lst_obj):
    n = 1
    while n < len(lst_obj):
        br = True
        for i in range(len(lst_obj)-n):
            if lst_obj[i] < lst_obj[i+1]:
                br = False
                lst_obj[i], lst_obj[i+1] = lst_obj[i+1], lst_obj[i]
        if br:
            break
        n += 1
    return lst_obj


orig_list = [random.randint(-100, 100) for _ in range(10)]

print(orig_list)
print(bubble_sort(orig_list[:]))

# замеры 10
print('Без оптимизации:')
print(
    timeit.timeit(
        "bubble_sort(orig_list[:])",
        globals=globals(),
        number=1000))
print('С оптимизацией:')
print(
    timeit.timeit(
        "bubble_sort_mod(orig_list[:])",
        globals=globals(),
        number=1000))

orig_list = [random.randint(-100, 100) for _ in range(100)]
print(orig_list)
print(bubble_sort(orig_list))
# замеры 100
print('Без оптимизации:')
print(
    timeit.timeit(
        "bubble_sort(orig_list[:])",
        globals=globals(),
        number=1000))
print('С оптимизацией:')
print(
    timeit.timeit(
        "bubble_sort_mod(orig_list[:])",
        globals=globals(),
        number=1000))

orig_list = [random.randint(-100, 100) for _ in range(1000)]
print(orig_list)
print(bubble_sort(orig_list))
# замеры 1000
print('Без оптимизации:')
print(
    timeit.timeit(
        "bubble_sort(orig_list[:])",
        globals=globals(),
        number=1000))
print('С оптимизацией:')
print(
    timeit.timeit(
        "bubble_sort_mod(orig_list[:])",
        globals=globals(),
        number=1000))

'''
[59, 97, -78, 89, 96, -21, 69, -82, 81, 80]
[97, 96, 89, 81, 80, 69, 59, -21, -78, -82]
Без оптимизации:
0.01444658999753301
С оптимизацией:
0.011914687001990387
[-73, 5, -64, -62, 90, -64, 72, -5, -28, 99, -93, -98, -11, -46, 41, 11, -41, -49, 84, -28, -54, 62, -36, -56, 52, -22, -10, -2, 70, 67, -85, -13, 38, 67, -13, -37, 14, -18, 80, 27, 30, 3, -66, -43, 96, -33, -38, 47, -77, 83, -100, -100, 28, 56, -9, 11, 75, 61, -71, -54, -72, 44, -13, 37, 70, -56, 57, 1, 28, -17, -4, 31, -5, -59, -54, 6, -22, -60, -56, 54, 82, 4, -32, 25, -35, 78, 81, -58, 13, -23, -37, 26, -61, 25, -12, -24, 25, -99, -42, 77]
[99, 96, 90, 84, 83, 82, 81, 80, 78, 77, 75, 72, 70, 70, 67, 67, 62, 61, 57, 56, 54, 52, 47, 44, 41, 38, 37, 31, 30, 28, 28, 27, 26, 25, 25, 25, 14, 13, 11, 11, 6, 5, 4, 3, 1, -2, -4, -5, -5, -9, -10, -11, -12, -13, -13, -13, -17, -18, -22, -22, -23, -24, -28, -28, -32, -33, -35, -36, -37, -37, -38, -41, -42, -43, -46, -49, -54, -54, -54, -56, -56, -56, -58, -59, -60, -61, -62, -64, -64, -66, -71, -72, -73, -77, -85, -93, -98, -99, -100, -100]
Без оптимизации:
0.5670613779984706
С оптимизацией:
0.010917380001046695
[21, -21, -93, -4, 1, 81, -43, 31, 60, 15, 35, -91, -71, 42, -51, -70, -5, -53, -93, 85, 76, -10, 84, 70, 8, 7, 59, 74, 96, -59, -71, 31, -64, -87, 28, 26, 30, 3, -65, -80, 79, -35, 66, 95, -64, 71, -42, -29, -27, -6, -73, 73, -97, 61, 38, -55, 98, -91, 46, 66, -72, 89, -87, -65, -41, -70, 27, 31, -93, -81, -71, 27, -25, -48, -41, -46, 76, 51, 1, 87, 86, -71, -2, 28, 75, 18, -27, -18, -73, 41, -2, 81, 48, -84, -60, -97, 25, -51, -78, -28, 30, -32, 33, 30, -99, 42, -7, 87, 35, 66, -91, -20, -96, 37, -57, -2, -92, -70, -14, 41, 87, 19, -5, -40, -83, -48, -84, 77, -44, -52, -32, -91, 40, 39, 67, 70, 0, -23, -39, -43, 2, -4, 17, -70, -20, -35, -48, 75, -11, -6, -2, 30, -48, -66, -11, 24, 86, 94, -62, -69, -55, 80, -51, 85, 89, 15, 5, -38, 25, -26, -43, 96, 10, -17, -59, -54, 2, -76, -24, 47, -31, -7, -94, -80, 37, 70, -48, -41, 10, 82, 50, -89, -58, -85, 91, -39, 21, 67, 23, -69, -39, -31, 95, -26, -100, -12, 7, -5, 32, 62, 62, 35, 86, 54, -85, 51, -54, -95, 41, -44, 40, -30, -53, -32, 43, 2, 7, -14, -3, 94, 17, 86, 44, -100, 71, -4, 8, -42, 34, -41, 27, -15, 86, 84, 4, 53, 25, -4, 28, 7, 43, -87, 8, -63, -59, -5, 84, -30, -72, -9, 78, -99, -17, -100, 53, 48, -26, 36, -2, -67, 51, 82, 97, 100, 18, 85, -17, 32, 70, -20, -35, -80, -79, -54, -17, 27, -57, 2, -44, -29, -83, -33, 34, 4, -81, 86, 18, 13, -1, 54, -88, 70, -97, -53, -11, -46, -89, 3, -35, -93, -57, -19, 93, 61, -87, -69, -57, 82, 9, -27, -63, 81, 86, -35, -56, 33, 49, -42, -17, 57, 50, -5, 55, -91, 5, -36, -6, 57, 71, 18, 17, -88, 47, -16, -27, 79, -76, 31, 39, -70, 27, 67, -53, -57, 61, -96, 77, 82, 100, 15, 51, 48, 18, 78, -72, -27, 34, 11, -17, -60, 52, 45, -47, 71, -11, 45, 54, -69, 93, 26, -17, -26, -38, 91, 81, 94, 91, -90, 56, 80, 53, -51, -63, 79, -43, -100, -41, -78, 18, -60, -66, -47, 14, -26, 54, -46, -74, -87, 24, -29, -66, -46, 15, -21, 38, -45, -62, -22, 67, 65, 14, -95, 11, -6, -7, 75, 12, -85, 54, 7, -90, 47, -53, 69, 22, -3, -7, -88, -65, 93, 24, 29, 75, 31, -83, 24, -51, 73, -86, 68, 89, 2, -70, -36, -57, -84, 58, 48, -43, 99, 29, 5, 97, -96, -89, -70, -78, 43, 55, -15, -37, -41, 76, -91, 4, -20, 22, 68, 15, 7, 2, 32, 10, -55, 82, 65, 39, -29, 27, 33, -95, -28, -4, -89, -41, 5, -4, 63, -100, -1, 24, -72, 61, -54, 85, 12, 23, 62, 35, -32, 85, -51, 79, -7, 7, -71, -63, -56, 80, 25, -32, 58, 5, -64, -79, -100, -2, -5, 9, -7, -57, 52, -43, 90, -79, 50, 47, -19, 58, -53, 30, 60, 69, 3, -65, -63, 10, 21, 73, 69, -31, -50, -66, -17, -74, -42, 17, 44, -97, -57, -10, -30, 8, 43, 50, -87, 97, -63, 43, 69, 59, -41, 82, -54, 47, 21, 74, 70, 90, 91, -23, 3, -15, 65, 64, -40, -35, -64, 96, 71, 71, -59, -93, -47, -78, -70, 29, 61, 5, 37, 93, 84, -31, -7, 61, -50, 49, 70, 17, -2, 23, -58, 85, 74, -41, 97, 31, -7, -5, 41, -25, 47, -16, -31, 76, -2, 73, -46, -23, 63, 4, 77, -85, -30, -80, -23, 81, 54, 86, -13, 4, 60, 10, 85, 99, -39, -70, -95, 46, -96, 90, -88, 11, 9, 65, 97, -98, 19, -44, -34, 41, 29, 66, 1, 68, -81, 34, 88, -33, 27, 73, -4, 23, -91, 27, 21, -28, -77, 34, 94, -89, -80, -61, 25, -97, 27, 34, -10, -40, -38, 16, -71, -17, -65, -25, 38, -93, -86, 67, -11, -95, -20, -67, -59, -8, 35, -51, -78, -13, 32, -56, -76, 98, -44, -97, 21, -41, -44, 38, -68, -7, 90, 98, -48, 22, -76, 35, 46, -25, 12, 32, 69, 71, -52, 28, -57, 46, -98, 36, 81, 24, 56, 60, -83, -14, -93, 52, -49, 73, -43, 21, -53, -74, 98, 2, 85, -41, 5, -35, -73, -95, 7, 20, 26, -22, 84, 91, -47, -94, 36, 39, -3, 21, -93, 31, -49, 46, -54, 4, 30, -64, 65, 30, 80, 70, 25, 76, -48, -52, 52, 1, -88, 18, 23, 23, -8, -43, -30, 29, -87, -96, -72, -81, 3, 24, 30, -31, 89, -91, 31, 75, 1, -41, 42, -17, 56, -71, 85, -6, 68, 45, 68, 35, -69, 70, 68, 59, 98, 44, 10, 66, -21, 9, -8, 29, 84, 22, 67, 81, -8, -33, -77, -45, 39, 30, -60, -74, -59, 9, -77, -69, -43, -33, 53, 100, 84, 39, 2, -30, -87, -51, 75, -48, -91, -50, 52, 66, 44, 55, -75, 46, -2, -4, -72, -32, 97, -25, 28, -78, 58, -97, -66, 15, -27, -49, 70, -76, 9, 16, -3, -10, 4, 23, 91, 77, 98, -85, -16, -6, -100, -97, -51, -17, -80, -59, 66, 6, -63, 68, -40, 64, 19, -57, 64, -13, 86, 11, 99, 32, -25, 14, -28, -32, 34, -18, 39, -12, -15, 56, -2, 33, -60, -39, -21, 98, -86, 41, 66, -39, -14, 100, -7, 97, -26, -14, -64, 98, -7, 74, 44, -45, 22, -80, -3, 57, 30, -70, 37, 100, -81, -65, -43, -57, -70, 66, -54, 53, -23, -40, 97, -85, -14, -62, -100, 64, 44, 90, 97, -56, -35, 72, 83, -29, -7, 47, -47, 62, -62, -31, -56, -86, -9, 51, -70, -95, 28, 40, 88, 30, -12]
[100, 100, 100, 100, 100, 99, 99, 99, 98, 98, 98, 98, 98, 98, 98, 98, 97, 97, 97, 97, 97, 97, 97, 97, 97, 96, 96, 96, 95, 95, 94, 94, 94, 94, 93, 93, 93, 93, 91, 91, 91, 91, 91, 91, 90, 90, 90, 90, 90, 89, 89, 89, 89, 88, 88, 87, 87, 87, 86, 86, 86, 86, 86, 86, 86, 86, 86, 85, 85, 85, 85, 85, 85, 85, 85, 85, 84, 84, 84, 84, 84, 84, 84, 83, 82, 82, 82, 82, 82, 82, 81, 81, 81, 81, 81, 81, 81, 80, 80, 80, 80, 79, 79, 79, 79, 78, 78, 77, 77, 77, 77, 76, 76, 76, 76, 76, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 73, 73, 73, 73, 73, 73, 72, 71, 71, 71, 71, 71, 71, 71, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 69, 69, 69, 69, 69, 68, 68, 68, 68, 68, 68, 68, 67, 67, 67, 67, 67, 67, 66, 66, 66, 66, 66, 66, 66, 66, 66, 65, 65, 65, 65, 65, 64, 64, 64, 64, 63, 63, 62, 62, 62, 62, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 59, 59, 59, 58, 58, 58, 58, 57, 57, 57, 56, 56, 56, 56, 55, 55, 55, 54, 54, 54, 54, 54, 54, 53, 53, 53, 53, 53, 52, 52, 52, 52, 52, 51, 51, 51, 51, 51, 50, 50, 50, 50, 49, 49, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 46, 46, 46, 46, 46, 46, 45, 45, 45, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 42, 42, 42, 41, 41, 41, 41, 41, 41, 40, 40, 40, 39, 39, 39, 39, 39, 39, 39, 38, 38, 38, 38, 37, 37, 37, 37, 36, 36, 36, 35, 35, 35, 35, 35, 35, 35, 34, 34, 34, 34, 34, 34, 34, 33, 33, 33, 33, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 29, 29, 29, 29, 29, 29, 28, 28, 28, 28, 28, 28, 27, 27, 27, 27, 27, 27, 27, 27, 27, 26, 26, 26, 25, 25, 25, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 23, 23, 22, 22, 22, 22, 22, 21, 21, 21, 21, 21, 21, 21, 21, 20, 19, 19, 19, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 16, 16, 15, 15, 15, 15, 15, 15, 14, 14, 14, 13, 12, 12, 12, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 6, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, -1, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -3, -3, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -6, -6, -6, -6, -6, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -8, -8, -8, -8, -9, -9, -10, -10, -10, -10, -11, -11, -11, -11, -11, -12, -12, -12, -13, -13, -13, -14, -14, -14, -14, -14, -14, -15, -15, -15, -15, -16, -16, -16, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -18, -18, -19, -19, -20, -20, -20, -20, -20, -21, -21, -21, -21, -22, -22, -23, -23, -23, -23, -23, -24, -25, -25, -25, -25, -25, -25, -26, -26, -26, -26, -26, -26, -27, -27, -27, -27, -27, -27, -28, -28, -28, -28, -29, -29, -29, -29, -29, -30, -30, -30, -30, -30, -30, -31, -31, -31, -31, -31, -31, -31, -32, -32, -32, -32, -32, -32, -32, -33, -33, -33, -33, -34, -35, -35, -35, -35, -35, -35, -35, -35, -36, -36, -37, -38, -38, -38, -39, -39, -39, -39, -39, -39, -40, -40, -40, -40, -40, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -42, -42, -42, -42, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -44, -44, -44, -44, -44, -44, -45, -45, -45, -46, -46, -46, -46, -46, -47, -47, -47, -47, -47, -48, -48, -48, -48, -48, -48, -48, -48, -49, -49, -49, -50, -50, -50, -51, -51, -51, -51, -51, -51, -51, -51, -51, -52, -52, -52, -53, -53, -53, -53, -53, -53, -53, -54, -54, -54, -54, -54, -54, -54, -55, -55, -55, -56, -56, -56, -56, -56, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -58, -58, -59, -59, -59, -59, -59, -59, -59, -60, -60, -60, -60, -60, -61, -62, -62, -62, -62, -63, -63, -63, -63, -63, -63, -63, -64, -64, -64, -64, -64, -64, -65, -65, -65, -65, -65, -65, -66, -66, -66, -66, -66, -67, -67, -68, -69, -69, -69, -69, -69, -69, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -71, -71, -71, -71, -71, -71, -71, -72, -72, -72, -72, -72, -72, -73, -73, -73, -74, -74, -74, -74, -75, -76, -76, -76, -76, -76, -77, -77, -77, -78, -78, -78, -78, -78, -78, -79, -79, -79, -80, -80, -80, -80, -80, -80, -80, -81, -81, -81, -81, -81, -83, -83, -83, -83, -84, -84, -84, -85, -85, -85, -85, -85, -85, -86, -86, -86, -86, -87, -87, -87, -87, -87, -87, -87, -87, -88, -88, -88, -88, -88, -89, -89, -89, -89, -89, -90, -90, -91, -91, -91, -91, -91, -91, -91, -91, -91, -92, -93, -93, -93, -93, -93, -93, -93, -93, -94, -94, -95, -95, -95, -95, -95, -95, -95, -96, -96, -96, -96, -96, -97, -97, -97, -97, -97, -97, -97, -97, -98, -98, -99, -99, -100, -100, -100, -100, -100, -100, -100, -100]
Без оптимизации:
58.663944209001784
С оптимизацией:
0.12619053099842859

Польза от оптимизации, без сомнений есть. Это особенно заметно на больших объемах данных. 
Отчасти из-за большей вероятности одинаковых по значению элементов.
'''
