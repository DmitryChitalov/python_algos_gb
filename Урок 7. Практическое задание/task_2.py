"""
2. Отсортируйте по возрастанию методом слияния одномерный вещественный массив,
заданный случайными числами на промежутке [0; 50). Выведите на экран исходный
и отсортированный массивы.

Пример:
Введите число элементов: 5
Исходный - [46.11436617832828, 41.62921998361278, 18.45859540989644, 12.128870723745806, 8.025098788570562]
Отсортированный - [8.025098788570562, 12.128870723745806, 18.45859540989644, 41.62921998361278, 46.11436617832828]
"""
import random
from timeit import timeit

def make_list(n, dw = 0, up = 50):
    """
    Возвращает список размерностью n, заполненный случайными вещественными числами в диапазоне 
    [dw:up] или от 0 до 50 по-умолчанию

    """

    return [random.uniform(dw, up) for i in range(n)]


def merge_sort(lst):
    """
    Осуществляет сортировку списка методом слияния

    """
    if len(lst) > 1: # дробим исходный массив
        center = len(lst) // 2 # определяем центральный элемент
        left = lst[:center]  # создаем левый срез массива
        right = lst[center:]  # создаем правый срез массива

        merge_sort(left)  # запускаем рекурсию
        merge_sort(right)

        # останавливаем рекурсию, собираем отсортированный список
        i, j, k = 0, 0, 0

        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                lst[k] = left[i]
                i +=1
            else:
                lst[k] = right[j]
                j += 1
            k += 1

        while i < len(left):
            lst[k] = left[i]
            i += 1
            k += 1
        
        while j < len(right):
            lst[k] = right[j]
            j += 1
            k += 1

        return lst


def user_poll():
    """
    Опрашиваем пользователи и выводим результат
    """
    n = int(input("Введите число элементов: \n"))

    arr = make_list(n)

    print("Исходный массив: ", arr)
    print("Отсортированный массив: ", merge_sort(arr.copy()))

    print("Проверка: ", sorted(arr))
    return


if __name__ == '__main__':
    while True:
        print('Нажмите ctr+c для выхода')
        user_poll()


"""
Вывод программы:
python3 'Урок 7. Практическое задание/task_2.py'
Нажмите ctr+c для выхода
Введите число элементов: 
5
Исходный массив:  [14.911104186485025, 17.102184626476507, 2.1368654346341556, 37.154692549720224, 18.320071794634966]
Отсортированный массив:  [2.1368654346341556, 14.911104186485025, 17.102184626476507, 18.320071794634966, 37.154692549720224]
Проверка:  [2.1368654346341556, 14.911104186485025, 17.102184626476507, 18.320071794634966, 37.154692549720224]
Нажмите ctr+c для выхода
Введите число элементов: 
7
Исходный массив:  [34.29514633658825, 7.326030038330073, 44.190164398869484, 10.446872548615204, 16.236590490712643, 14.444589960005889, 13.95215199066992]
Отсортированный массив:  [7.326030038330073, 10.446872548615204, 13.95215199066992, 14.444589960005889, 16.236590490712643, 34.29514633658825, 44.190164398869484]
Проверка:  [7.326030038330073, 10.446872548615204, 13.95215199066992, 14.444589960005889, 16.236590490712643, 34.29514633658825, 44.190164398869484]
Нажмите ctr+c для выхода
Введите число элементов: 
4
Исходный массив:  [49.34621671882518, 12.852117505597521, 4.899011485710797, 31.425406266122526]
Отсортированный массив:  [4.899011485710797, 12.852117505597521, 31.425406266122526, 49.34621671882518]
Проверка:  [4.899011485710797, 12.852117505597521, 31.425406266122526, 49.34621671882518]

Сортировка успешно работает на четных и нечетных размеров массива
"""