"""
2.	Написать программу сложения и умножения двух шестнадцатеричных чисел.
При этом каждое число представляется как массив, элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections
Для лучшее освоения материала можете даже сделать несколько решений этого задания,
применив несколько коллекций из модуля collections
Также попробуйте решить задачу вообще без collections и применить только ваши знания по ООП
(в частности по перегрузке методов)
"""

from collections import defaultdict
import functools


def hexnum(num1=list(), num2=list()):
    lcl_nums = defaultdict(list)
    lcl_nums[f'{num1}'] = num1
    lcl_nums[f'{num2}'] = num2

    lcl_sum = sum([int(''.join(el), 16) for el in lcl_nums.values()])
    lcl_mul = functools.reduce(lambda a, b: a * b, [int(''.join(i), 16) for i in lcl_nums.values()])

    return f"Сумма: {list('%X' % lcl_sum)}", f"Произведение: {list('%X' % lcl_mul)}"


num1 = list(input(f"Введите 1-е натуральное шестнадцатиричное число: ").upper())
num2 = list(input(f"Введите 2-е натуральное шестнадцатиричное число: ").upper())

print(f"Операции с числами {num1} и {num2}: {hexnum(num1, num2)}")
