"""
Задание 3.
Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
# 1 решение  сложность: О(n**2)
from itertools import groupby
dict_3 = {10000: 'Компания 1',30000: 'Компания 2',20000: 'Компания 3',40000: 'Компания 4',5000: 'Компания 5'}
list_3 = []
for i in dict_3.keys():
    list_3.append(i)
    list_3 = [el for el, _ in groupby(list_3)]
list_3.sort()
g = 0
while g<len(list_3)-3:
    dict_3.pop(list_3[g])
    g+=1
print(f'сложность: О(n**2): {dict_3}')

# 2 решение О(n)
dict_2 = {10000: 'Компания 1',30000: 'Компания 2',20000: 'Компания 3',40000: 'Компания 4',5000: 'Компания 5'}
list_2 = []
for i in dict_2.keys():
    list_2.append(i)
list_2.sort()
s = len(list_2)
d = 0
while s>3:
    dict_2.pop(list_2[d])
    s-=1
    d+=1
print(f'сложность: О(n): {dict_2}')

# Второе решение эфективнее, так как оно легче по классификации О большое




