"""
Задание 4.
Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

# 1 вариант решения, сложность: O(1)
def verification():
    user = {'Данил': 1234, 'Кристина': 1234, 'Роман': 1234, 'Мария': 1234, 'Пётр': 1234}
    active = {'Данил': False, 'Кристина': True, 'Роман': False, 'Мария': False, 'Пётр': False}
    while True:
        name = input('Введите имя или Q чтобы выйти:')
        if name == 'q' or name == 'Q' or name == 'й' or name == 'Й':
            break
        elif user.get(name) == None:
            print('Ошибка! Попробуйте еще раз.')
        if active.get(name) == False:
            while True:
                password = int(input('Введите пароль:'))
                if password == user.get(name):
                    active.update({name:True})
                    print('Успешно!')
                    break
                else:
                    print('Ошибка! Попробуйте еще раз.')
        elif active.get(name) == True:
            print('Успешно!')
    return active
print(verification())

# 2 вариант решения, сложность: O(n**2)
user_2 = {'Данил': {'password' : 1234, 'active' : False},
          'Кристина': {'password' : 1234, 'active' : False},
          'Роман': {'password' : 1234, 'active' : False},
          'Мария': {'password' : 1234, 'active' : False},
          'Пётр': {'password' : 1234, 'active' : False}}

def verification_2(name, password):
    for i, a in user_2.items():
        if name == i:
            for f in a.items():
                if f[0] == 'password':
                    if f[1] == password:
                        user_2.update({name: {'password' : password, 'active' : True}})
                        print('Успешно!')
                    else:
                        print('Неверный пароль!')
    return f'{name} - {user_2.get(name)}'

print(verification_2(input('Введите имя:'), int(input('Введите пароль:'))))