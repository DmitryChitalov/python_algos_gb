import random
import time
"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему
"""

some_arrow = [i for i in range(1, 100000001)]      # Генерируем исходный масив

'''
    Могу сказать, что проблемы с фактическим временем обработки масива начинаются с цифры в 100млн елементов в нем.
    *на моем компютере
    Как улучшить результат - возможрно если не генерировать масив, а брать его с файла или БД   
    Но тут тоже все зависить от скорости работы носителя памяти, чтения файла.
    Но думаю это скорее замедлит результат ибо процессор самая быстра часть пк не зря у него есть функция "очереди",
    пока он ожидает заврешения работы других устройств
'''


def func_1(nums):
    start = time.time()
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    finish = time.time()
    return print(finish-start)


func_1(some_arrow)
