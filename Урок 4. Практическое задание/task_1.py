"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему
"""

from timeit import timeit

setup = '''
import random 
arr = [random.choice(range(1001)) for _ in range(10000)]
def func_1(nums):
    
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr
'''

s = 'func_1(arr)'

print(timeit(s, setup, number=10))

'''
Проверочные данные для func_1: проверка 10000 случайных чисел от 1 до 1000
10 раз. Результаты: 10 замеров - 0.0132, 100 замеров - 0.1108, 1000 замеров 
- 1.1954.Заменив цикл for на генератор списка получили некоторое уменьшение
 времени выполнения: 10 замеров - 0.0118, 100 замеров - 0.1208, 1000 замеров 
 -1.1479. Это произошло потому, что генератор списка более оптимизирован 
 для работы со списком, чем классический цикл for
'''

'''
new_arr = [i for i, x in enumerate(nums) if x % 2 == 0]
'''