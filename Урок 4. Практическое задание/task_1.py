"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему
"""

# Initial Code

from timeit import timeit

print(timeit('''

def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr

'''))

# В коде выше идет перебор всех элементов с помощью цикла с постепенным формированием нового списка.
# Для оптимизации заменим цикл на генераторное выражение с условием, так как такие выражения работают быстрее,
# чем пербор циклом.
# Ниже идет оптимизированный код

print(timeit('''

def func_2(nums):
    nums_list = nums
    new_arr = [i for i in range(len(nums_list)) if nums_list[i] % 2 == 0]
    return new_arr

'''))


# 0.12842489999999998
# 0.06332769999999999
# результаты замеров нестабильны, однако, в целом, согласно тестам второй вариант функции работает быстрее.

