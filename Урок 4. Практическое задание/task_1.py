"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему
"""

import random
import timeit

nums = [1, 23, 4, 65, 78, 90, 0, 8, 6, 45, 45, 7, 8, 9, 0, 56, 4, 76, 5, 34, 5, 7, 45, 23, 4, 6, 56, 76, 78, 7, 578, 57,
        685, 57, 89, 64, 7, 68, 8]


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


def func_2(nums):
    new_arr = []
    for el in nums:
        if el % 2 == 0:
            new_arr.append(el)
    return new_arr




print('Время работы заданной функции')
print(timeit.timeit(f"func_1({nums})", setup="from __main__ import func_1", number=1000))

print('Время работы модифицированной функции')
print(timeit.timeit(f"func_2({nums})", setup="from __main__ import func_2", number=1000))


'''
После оптимизации время выполнения фунции уменьшилось без потери функционала.
Вместо обращения к спискам элемента по индексу применил встроеннае возможности  языка, которые уже оптимизированны.
'''