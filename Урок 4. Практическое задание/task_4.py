"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Попытайтесь написать третью версию, которая будет самой быстрой.
Сделайте замеры и опишите, получилось ли у вас ускорить задачу.

Без аналитики задание считается не принятым
"""

import timeit as t

array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


print(func_1())
print(func_2())

print(t.timeit("func_1()", globals=globals(), number=10000))
print(t.timeit("func_2()", globals=globals(), number=10000))

"""
Вариант 1 будет более оптимальным поскольку сложность алгоритма имеет O(n), в то время как 
сложность второго варианта будет O(n^2) (наличие цикла for и функции max() которые имеют сложность по O(n)
каждый). Подтверждение сложности алгоритма отображено после запуска timeit:
Вариант 1 - 0.027523
Вариант 2 - 0.0422727

"""