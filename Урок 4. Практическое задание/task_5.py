"""
Задание 5.*

Приведен наивный алгоритм нахождения i-го по счёту
простого числа (через перебор делителей).

Попробуйте решить эту же задачу,
применив алгоритм "Решето эратосфена" (https://younglinux.info/algorithm/sieve)

Подсказка:
Сравните алгоритмы по времени на разных порядковых номерах чисел:
10, 100, 1000
Опишите результаты, сделайте выводы, где и какой алгоритм эффективнее
Подумайте и по возможности определите сложность каждого алгоритма
"""

from timeit import timeit
from math import log


def simple(i):
    """Без использования «Решета Эратосфена»"""
    count = 1
    n = 2
    while count <= i:
        t = 1
        is_simple = True
        while t <= n:
            if n % t == 0 and t != 1 and t != n:
                is_simple = False
                break
            t += 1
        if is_simple:
            if count == i:
                break
            count += 1
        n += 1
    return n


def sieve_eratosfen(nn):
    """С использованием «Решета Эратосфена»"""
    n = round(nn * log(nn)) * 2
    sieve = [True] * n
    k = 0
    for i in range(2, n):
        if sieve[i]:
            k += 1
            if k == nn:
                return i
            j = i * 2
            while j < n:
                sieve[j] = False
                j += i


i = int(input('Введите порядковый номер искомого простого числа: '))
print('Без использования «Решета Эратосфена»:')
print(simple(i))
print(timeit(f"simple({i})", setup="from __main__ import simple", number=100))
print('C использованием «Решета Эратосфена»:')
print(sieve_eratosfen(i))
print(timeit(f"sieve_eratosfen({i})", setup="from __main__ import sieve_eratosfen", number=100))


"""
При подсчете 10 порядкового числа
Без использования «Решета Эратосфена» функция отрабатывает 0.00154 секунды
С использованием «Решета Эратосфена» функция отрабатывает 0.00055 секунды
При подсчете 100 порядкового числа
Без использования «Решета Эратосфена» функция отрабатывает 0.188 секунды
С использованием «Решета Эратосфена» функция отрабатывает 0.014 секунды
При подсчете 1000 порядкового числа
Без использования «Решета Эратосфена» функция отрабатывает 31.18 секунды
С использованием «Решета Эратосфена» функция отрабатывает 0.25 секунды
С решетом в разы быстрее. Чем больше число, тем больше разрыв по времени.

Алгоритма Эратосфена O(n log(log(n))
Двойного цикл - O(n**2)
"""