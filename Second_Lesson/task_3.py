"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены
Используем операции % //

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
"""
def reverse_number(numb : int):
    if (numb < 10):
        return numb
    else:
        #while ((numb // i) >= 10):  Т.к в задании было сказано делать без цикла, я сдлелал ещё одну рекурсивную функцию
           # i *= 10
        i = digits_in_num(numb,1)
        current_numb = (numb % 10) * i  # Берём число из конца исходного числа и умножаем его на число кратное 10
        numb //= 10
        return current_numb + reverse_number(numb)

def digits_in_num(num : int, i: int): # Данная функция возвращает число, ВСЕГДА катное 10 (т.е 10, 100, 1000 и т.д
    # (в зависимости от кол-ва разрядов исходного числа))
    if (num >= 10):
        return digits_in_num(num//10, i * 10)
    else:
        return i

# Задание выполнено без встроенных функций и без циклов
print(reverse_number(3486))
print(reverse_number(123))

