"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


# Вариант 1. O(n^2) - квадратичная сложность. Сравнение каждого элемента с каждым.
def lst_min_val(item_lst):
    """Функция осуствляет поиск минимального значения для списка"""
    min_arg = item_lst[0]
    for j in item_lst:
        for k in item_lst:
            if k < j:
                min_arg = k
        return min_arg


# Вариант 2. O(n) - гораздо лучший вариант т.к. сложность линейная, за счет использования встроенной функции min.
def lst_min_val_2(item_lst):
    return min(item_lst)


lst = [i for i in range(30, 10000)]
print(lst_min_val(lst))

lst_1 = [1, 3, -5, -10, 2, 5, 100]
print(lst_min_val_2(lst_1))