"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""
from random import randint


def min_value_square(lst):
    for i in range(len(lst)):
        value = lst[i]
        min_founded = True
        for j in range(len(lst)):
            if value > lst[j]:  # Значит в списке присутствуют значения меньше текущего значения
                min_founded = False
        if min_founded:
            break
    return value


def min_value_line(lst):
    min_val = lst[0]
    for i in range(1, len(lst)):
        if min_val > lst[i]:
            min_val = lst[i]
    return min_val


input_list = [randint(-10000, 10000) for i in range(100)]

square_min = min_value_square(input_list)
line_min = min_value_line(input_list)

print(f"Минимальное значение, найденое с помощью алгоритма O(N^2): {square_min}")
print(f"Минимальное значение, найденое с помощью алгоритма O(N): {line_min}")
