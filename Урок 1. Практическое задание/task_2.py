"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""
import random


def min_number_first(list_numbers):
    """
    функция принимает список чисел, ищет минимальное значения и возвращяет его.
    сложность O(n**2), функция соответствует ТЗ но второй цикл избыточен.
    """
    min_num = list_numbers[0]

    for el in list_numbers:
        for elem in list_numbers:
            if el > elem:
                if elem < min_num:
                    min_num = elem
    return min_num
##############################################################################################


def min_number_second(list_numbers):
    """
    функция принимает список чисел, ищет минимальное значения и возвращяет его.
    сложность O(n)
    """
    min_num = None
    for num in list_numbers:
        if min_num is None:
            min_num = num
        if min_num > num:
            min_num = num
    return min_num


############################################################################################

list_n = [random.randint(-100, 100) for num in range(200)]
# print(min(list_n))
print(min_number_first(list_n))
print(min_number_second(list_n))
