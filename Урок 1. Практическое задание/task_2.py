"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


# O(n^2)
def search_quadratic(*args):
    while len(num) > 1:
        for i, value in enumerate(num):
            l_num = len(num) - 1
            if value > num[l_num]:
                num.remove(num[i])
            else:
                continue
    return num[0]


# O(n)
def search_liner(*args):
    return min(num)


num = [11, 10, 33, 5, 9, 15, 22, 1]

print(search_quadratic(num))
print(search_liner(num))
