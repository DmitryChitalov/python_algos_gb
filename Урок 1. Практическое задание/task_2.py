"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


#########

# Общая сложность O(N^2)

def search_min(my_list):
    min_value = my_list[0]  # O(1)
    for i in range(len(my_list)):  # O(N)
        if my_list[i] < min_value:  # O(N)
            min_value = my_list[i]  # O(1)
    return min_value    # O(1)


# Общая сложность O(N)

def search_min_fast(my_list):
    min_value = min(my_list)    # O(N)
    return min_value    # O(1)


new_list = [2, 3, 5, 9, 1, 0, 2, 3]

print(search_min(new_list))
print(search_min_fast(new_list))
