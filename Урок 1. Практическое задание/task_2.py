"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


from random import randint


def min1(lst):
    l = len(lst)
    m = lst[0]
    for k in range(l):
        for j in range(l):
            if lst[k] < lst[j] and lst[k] < m:
                m = lst[k]
    return m


#  min(lst)/max(lst) - O(N)
#  можно было использовать min.
#  смысл засовывать функцию в функцию
#  решил использовать в ДЗ классический обход списка
def min2(lst):
    m = lst[0]
    for i in range(len(lst)):
        if lst[i] < m:
            m = lst[i]
    return m


test_lst = [randint(1, 100) for el in range(10)]
print(f'Исходный список\n{test_lst}')
print(f'Функция min1 вернула: {min1(test_lst)}')
print(f'Функция min2 вернула: {min2(test_lst)}')
