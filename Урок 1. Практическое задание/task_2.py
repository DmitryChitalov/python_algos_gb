"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


def min_in_list_quadratic(list_data):
    min_num = list_data[0]
    for _, num in enumerate(list_data):  # тут линейная сложность т.к. просходим по всему списку
        if num == min(list_data):   # тут каждый раз добавляется линейная сложность для поиска минимума
            min_num = num           # O(1)
    return min_num
# итого O(n) * O(n) =  O(n^2)  получается квадратичная сложность


def min_in_list_linear(list_data):
    min_num = list_data[0]
    for _, num in enumerate(list_data):  # тут линейная сложность...
        if num < min_num:                # O(1)
            min_num = num
    return min_num
# итого линейная сложность! Профит!)


data = [0, 1, 2, 3, -5]
print(min_in_list_quadratic(data))
print(min_in_list_linear(data))
