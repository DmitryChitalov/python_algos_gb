"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

# первый
def one(lst):
    m = 0
    mm = 0
    for i in lst:
        for ii in lst:
            if i < ii:
                m = i
        if m < mm:
            mm = m
    return(mm)

# два варианта второго. Не уверен, можно ли пользоваться pop()
def twoOne(lst):
    m = lst[0]
    for i in range(1, len(lst)):
        if m > lst[i]:
            m = lst[i]
    return m

def twoTwo(lst):
    m = lst.pop(0)
    for i in lst:
        if m > i:
            m = i
    return m


