"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
"""


def min_num(numb):
    min_number = numb[0]
    for i in range(len(numb)):
        for j in range(len(numb) - i):

            if numb[j] > numb[i]:
                min_number = numb[i]
            else:
                min_number = numb[j]
    return min_number


print(min_num([3, 5, 77, 10, 2]))
"""
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
"""


def smaller(arr):
    small = arr[0]

    for i in range(len(arr)):
        if arr[i] < small:
            small = arr[i]

    return small


x = [3, 5, 77, 10, 2]
print(smaller(x))
"""
Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""



