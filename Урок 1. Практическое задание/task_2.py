"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

def min_n( in_list ):
    out_min = 0
    for j in range(len(in_list)):          # O(N)
        if j == 0 : out_min = in_list[j]
        if out_min > in_list[j]: out_min = in_list[j]
    return out_min

def min_nn( in_list ):
    out_min = 0
    for j in range(len(in_list)):          # O(N^2)
        for k in range(len(in_list)):
            if in_list[k] < in_list[j]: out_min = in_list[k]
    return out_min

if __name__ == '__main__':
    v_list = [ 1,5,7,3,6,2 ]
    x = min_n(v_list)
    print("O(n):" + str(x))
    x = min_nn(v_list)
    print("O(n):" + str(x))

