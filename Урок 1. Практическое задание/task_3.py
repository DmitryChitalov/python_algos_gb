"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

# O(N)
def find_max3_1(companies):
    top_thee = {}
    for i in range(3):
        max = 0
        for index in companies:
            if max < companies[index]:
                max_index = index
        top_thee[max_index] = companies[max_index]
        companies.pop(max_index)
    return top_thee


# O(N log N)
def find_max3_2(companies):
    sorted_companies = {k: v for k, v in sorted(companies.items(), reverse=True, key=lambda x: x[1])}
    i = 0
    top3 = {}
    for key in sorted_companies:
        top3[key] = sorted_companies[key]
        if i > 1:
            break
        i += 1
    return top3


companies = {"Арена": 300, "Трибуна": 200, "Самовар": 400, "Система": 1000, "Меридиан": 400}

print(find_max3_2(companies))
print(find_max3_1(companies))

# Первое решение эффективнее, т.к. имееет меньшую сложность вычислений.
