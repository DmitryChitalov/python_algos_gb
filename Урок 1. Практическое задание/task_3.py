"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
info = {'Alcon': 1200000, 'Gazprom': 500000, 'Fenix': 20000, 'Ajax': 340000, 'Monro': 6700000}

 #1) 
def max_costs(dict_i):
    dict_ii = sorted(dict_i.items(), key=lambda costs: costs[1], reverse=True)[:3] # n log n
    return dict_ii

#2)
def max_costs_2(dict_i):
    i = 1
    for item in sorted(dict_i, key=dict_i.get, reverse=True): # O(n)
        print(item, dict_i[item])
        i += 1
        if i > 3:
            return i

print(max_costs(info))
print(max_costs_2(info))

""" Первый вариант решения лучше, так как его сложность логарифмическая. Данная функция работает быстрее, чем простой поиск, который перебирает все значения. """
