"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

firms = [{'name': 'firm_1', 'profit': 5000},
         {'name': 'firm_2', 'profit': 3000},
         {'name': 'firm_3', 'profit': 1000},
         {'name': 'firm_4', 'profit': 7000},
         {'name': 'firm_5', 'profit': 8000},
         {'name': 'firm_6', 'profit': 500},
         {'name': 'firm_7', 'profit': 7000},
         {'name': 'firm_8', 'profit': 10000}]

# решение 1
# O(n)
best_firms = []
firms_copy = firms.copy()
for i in range(3):
    z = max((x for x in firms_copy), key=lambda y: y['profit'])
    best_firms.append(z)
    firms_copy.remove(z)
print(best_firms)


# решение 2
# O(n log n)
firms.sort(key=lambda y: y['profit'], reverse=True)
print([firms[i] for i in range(len(firms)) if i < 3])

'''
Вывод:
Второе решение выглядит предпочтительнее, т.к. меньше строк кода
Но с учетом нотации О-большое первое решение будет эффективнее по производительности. 
'''