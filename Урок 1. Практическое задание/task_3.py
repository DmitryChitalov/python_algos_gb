"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
company = {'a': 900, 'b': 2300, 'c': 300, 'd': 400, 'e': 500, 'f': 600, 'g': 700, 'h': 800}

# O(n log n)
def find_top(comp_list):
    a = sorted(comp_list, key=comp_list.get, reverse=True)[:3]
    return a

print(find_top(company))

# O(n^2)
def find_top_2(comp_list, q_data):
    top = []
    max_list = []
    for i in comp_list.values():
        top.append(i)

    for x in range(q_data):
        max_profit = max(top)
        max_list.append(max_profit)
        top.remove(max_profit)
    return max_list

print(find_top_2(company, 3))

# Первое решение лучше, т.к. сложность O(n log n) меньше, чем O(n^)