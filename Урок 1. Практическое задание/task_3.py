"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
from collections import Counter
import operator
companies = {'Bank': 250000, 'Plant': 120000, 'Factory':500000, 'Camping': 100000, 'Market':580000}

k = Counter(companies)           #O(1)  Кажется наиболее оптимальным (если только импортируемые модули не добавляют сложность)
best_companies = k.most_common(3)
print(best_companies)

print(dict(sorted(companies.items(), key=operator.itemgetter(1), reverse=True)[:3])) # O(len(n))

the_best = list(companies.items())      #O(N)
the_best.sort(key = lambda i:i[1], reverse = True)
for i in the_best[:3]:
    print(i[0], ':', i[1])