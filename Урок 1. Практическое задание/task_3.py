"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

from operator import itemgetter

directory_company = {'Apple': 1000,
                     'Windows': 500,
                     'Linux': 200,
                     'Morgan': 450,
                     'Freeman': 60,
                     'Google': 900,
                     'Mail': 950,
                     'Yandex': 300}

# O(n) - сложность. Сортировка с использованием временной функции.
print('Вариант 1:')
dict_sort_1 = sorted(directory_company.items(), key=lambda item: item[1], reverse=True)[:3]
for k, v in dict_sort_1:
    print(f'{k} -> {v}')

# O(n) - сложность. При помощи метода стандартной библиотеки
print('Вариант 2:')
dict_sort_2 = sorted(directory_company.items(), key=itemgetter(1), reverse=True)[:3]
for k, v in dict_sort_2:
    print(f'{k} -> {v}')

# Оба варианта по сложности одинаковы, из-за использования for, но использовал немного разные пути
# с использованием внешнего модуля и без.


