"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


# search_1 T(n) = n + n*log n; O(n log n)
def search_1(dictionary):
    lst = list(dictionary.items())              # n
    lst.sort(key=lambda i: i[1])                # n log n
    return f'{lst[-1][0]}: {lst[-1][1]}\n' \
           f'{lst[-2][0]}: {lst[-2][1]}\n' \
           f'{lst[-3][0]}: {lst[-3][1]}'        # 1


# search_2 T(n) = 1 + 1 + n * n * n * n * n + 1 + 1 = n**5 + 4; O(n**5)
def search_2(dictionary):
    top_3 = {}                                                                  # 1
    i = 0                                                                       # 1

    while i < 3:                                                                # n
        max_val = max(dictionary.values())                                      # n
        top_3.update({k:v for k, v in dictionary.items() if v == max_val})      # n * 1

        for el in top_3.keys():                                                 # n
            if el in dictionary.keys():                                         # n
                dictionary.pop(el)                                              # 1

        i += 1                                                                  # 1

    return top_3                                                                # 1


companys = {
    'gazprom': 150000000,
    'sberbank': 200000000,
    'tmk': 95000000,
    'gmk': 130000000,
    'lukoil': 100000000
}

print(search_1(companys))
print(search_2(companys))

'''
ВЫВОД:
Решение search_1 более эффективно из-за меньшего количества вложенных циклов и экономии памяти 
search_1 - создаётся один дополнительный список,
search_2 - создаётся переменная и новый словарь.
'''
