"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


# Решение 1. Сложность: O(N log N)
def profit_search_1():
    r = sorted(comp_dict.items(), key=lambda x: x[1], reverse=True)
    return r[:3]


# Решение 2. Сложность: O(N)
def profit_search_2(obj):
    in_max = {}
    list_d = dict(obj)
    for i in range(3):
        maxi = max(list_d.items(), key=lambda k_v: k_v[1])
        del list_d[maxi[0]]
        in_max[maxi[0]] = maxi[1]
    return in_max


comp_dict = {'K': 1200, 'M': 1000, 'R': 1500, 'P': 2000}
print(comp_dict)
print('1:', profit_search_1())
print('2:', profit_search_2(comp_dict))
# Лучшим будет вариант два так как он является линейным и возвращается такой же тип данный
