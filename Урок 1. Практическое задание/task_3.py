"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

companies = {'Nike': 19000,
             'Reebok': 210000,
             'Adidas': 230000,
             'Puma': 2300,
             'Le coq': 23000,
             'Lacoste': 1300
             }

# way_1 Сложность: O(log n). Предпочтительный способ.

for num, el in enumerate(sorted(companies.items(), key=lambda x: x[1], reverse=True)[:3], 1):  # O(n) and O(log n)
    print(f'{num} место: {el[0]}')  # O(1)

# way_2  Сложность: O(n^2)

var_list = list(companies.values())
checker = len(var_list) - 3  # O(1)
result = []  # O(1)
while len(var_list) != checker:  # O(n^2)
    for k, v in companies.items():  # O(n)
        if v == max(var_list):  # O(n)
            result.append(k)  # O(1)
            var_list.remove(v)  # O(n)

for num, el in enumerate(result, 1):  # O(n)
    print(f'{num} место: {el}')  # O(1)
