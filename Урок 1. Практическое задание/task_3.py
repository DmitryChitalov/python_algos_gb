"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложн/ость каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


'Надеюсь поднасткаться со словорями за этот курс, просто пока что мои самы слабые стороны словари и работа с файлами'
company_dict = {
                'a': 10000,
                'b': 45064,
                'c': 354,
                'd': 3501,
                }
# i = 0
# while i < 4:
#     for key, value in company_dict.items():
#         #Здесь я не придумал как отсортировать словарь
#         print(f'Company {key} with biggest profit:{value}')
#     i += 1


#Точно сказать не могу предпологаю что уровень сложности O(log n) или O(n log n)
#Залез в гугл узнал что sort O(n log n)


company_list = list(company_dict.items())
company_list.sort(key =lambda i: i[1])
print(f'Company №1: {company_list[-1][0]} with profit: {company_list[-1][1]}')
print(f'Company №2: {company_list[-2][0]} with profit: {company_list[-2][1]}')
print(f'Company №3: {company_list[-3][0]} with profit: {company_list[-3][1]}')