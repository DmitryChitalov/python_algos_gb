"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
import random

companies = {f'Company {i}': random.randrange(- 100000, 100000) for i in range(10)}
print(companies)

# Вариант 1

sort_companies = sorted(companies, key=companies.get, reverse=True)[:3] # O(n log n)
for i, el in enumerate(sort_companies): # O(n)
    print(f'{i+1}) {el} прибыль: {companies.get(el)}') # O(1) + O(1) + O(1)


# Вариант 2

top3_list = [] #O(1)
copy_companies = companies #O(1)
for i in range(3): #O(n)
    get_max = max(copy_companies, key=copy_companies.get) #O(n)
    top3_list.append([get_max, copy_companies.get(get_max)]) #O(1)
    copy_companies.pop(get_max) #O(1)

print(top3_list)

"""
Вывод: 
Сложность варианта 1: O(n log n)
Сложность варианта 2: O(n)
Судя по общей сложности вариант 1 менее эффективен, чем вариант 2. 
Но по решению он мне нравится больше =)

"""