"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

data_firm = {'firm_1': 5000, 'firm_2': 7000, 'firm_3': 8500, 'firm_4': 2000, 'firm_5': 3500}

# первое решение сложность O(nlog n) - линейно-логарифмическая

one_top3 = sorted(data_firm.items(), key=lambda value: value[1], reverse=True)
print(one_top3[:3])

# второе решение O(n**2) квадратичная сложность "пузырьковый алгоритм"


def find_max(lst):
    flag = True
    while flag:
        flag = False
        for i in range(len(lst) - 1):
            if lst[i][1] < lst[i + 1][1]:
                lst[i], lst[i + 1] = lst[i + 1], lst[i]
                flag = True
    return lst[:3]


two_top3 = list(data_firm.items())
print(find_max(two_top3))










