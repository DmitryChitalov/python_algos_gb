"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

db_company_income = {'bmw': 1100,'audi': 1200,'lexus': 2100,'chevrolet': 3100}


# Сложность O(N^2)
def find_best_three(db):
    for el in range(len(db)):
        low_index = el
        for el2 in range(el + 1, len(db)):
            if db[el2][1] > db[low_index][1]:
                low_index = el2
        db[el], db[low_index] = db[low_index], db[el]
    return db[0:3]


list_db = list(db_company_income.items())
for el in find_best_three(list_db):
    print(f'{el[0]}:{el[1]}')

# Сложность O(N)
def find_best_three2(db):
    dict_db = dict(db)
    max_list = {}
    for el in range(3):
        max_final = max(dict_db.items(), key=lambda x: x[1])
        del dict_db[max_final[0]]
        max_list[max_final[0]] = max_final[1]
    return max_list


print(find_best_three2(db_company_income))

# Вывод второе решение оптимальнее, т.к. сложность O(N) - линейная