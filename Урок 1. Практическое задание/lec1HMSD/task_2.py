"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""
from random import randint


def find_min_by_each(r_list):
    min = r_list[0]
    for element in r_list:
        if element<min:
            min = element
    return min

def find_min_bu_func(r_list):
    return min(r_list)


random_list = [randint(1, 50) for i in range(20)]
print(random_list)
print(f"Минимальный элемент перебором = {find_min_by_each(random_list)}. Низкая производительность алгоритма O(n^2)")
print(f'Минимальный элемент встроенной функцией: {find_min_bu_func(random_list)}. Сложность O(n)')
