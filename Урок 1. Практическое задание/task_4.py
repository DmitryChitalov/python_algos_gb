"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
users = {
    'user_1': {'password': '11111111', 'activ': True},
    'user_2': {'password': '22222222', 'activ': False}
}


# решение 1
# O(n)
def authentification_1(users, name, password):
    for key, value in users.items():
        if key == name:
            if value['password'] == password and value['activ']:
                return 'Доступ предоставлен!'
            elif value['password'] == password and not value['activ']:
                return 'Активируйте учетную запись!'
            elif value['password'] != password:
                return 'Не верный пароль!'
    return 'Учетной записи не существует!'


# решение 2
# O(1)
def authentification_2(users, name, password):
    if users.get(name):
        if users[name]['password'] == password and users[name]['activ']:
            return 'Доступ предоставлен!'
        elif users[name]['password'] == password and not users[name]['activ']:
            return 'Активируйте учетную запись!'
        elif users[name]['password'] != password:
            return 'Не верный пароль!'
    return 'Учетной записи не существует!'


'''
Вывод:
С учетом нотации О-большое второе решение будет эффективнее по производительности. 
'''
print(authentification_1(users, 'user_1', '11111111'))
print(authentification_1(users, 'user_2', '2222222'))
print(authentification_1(users, 'user_3', '333333'))
print(authentification_2(users, 'user_1', '11111111'))
print(authentification_2(users, 'user_2', '2222222'))
print(authentification_2(users, 'user_3', '333333'))
