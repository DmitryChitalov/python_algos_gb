"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

##################################################################################

''' База данных представляет собою словарь, ключи котороо это логины, а значения это списки
    Первый элементо которого супер надеждый пароль, а второй признак активации учетки.'''

DB = {
    'login1': ['1234', True], 'login2': ['4321', True], 'login3': ['abcd', True], 'qwerty': ['qwerty', False]
      }

''' Вывод
    Я сделал только один вариант(ибо больше времени просто нет) но считаю:
    В реальной жизни, если бы надо было в два шага(как гугл иногда к примеру) доставать, логин и пароль,
    я бы сразу достал инфаормацию об активации аккаунта, чтобы не обращатся снова в БД
    Так же я не обрабатывал все исключения или ошибки которые могут возникнуть - если это реально влияет на оценку,
    прошу об этом написать, чтобы я это исправил следующий раз.
'''


def check_reg():                                                    # Total O(1)
    login = input('Enter your login:\n')                # О(1) | Я не реализую проверку на корректность введеных данных
    user = DB.get(login)                                            # O(1)

    if user:
        password = input('Enter your password:\n')                  # O(1)
    else:
        password = None                                             # O(1)
        print('Your login incorrect, press ENTER and try again')    # O(1)
        input()                                                     # O(1)
        check_reg()                                                 # думаю O(1) ибо у меня вся функция максимум О(1)

    if user[0] == password:                                         # O(1)
        print('Hello, you logged already')                          # O(1)
        if not user[1]:                                             # O(1)
            active = input('But your account doesn`t activated\nFor activate enter "y" if not enter "n":\n')    # O(1)
            if active != 'y':                                       # O(1)
                return                                              # тут можем обработать "n" или некоректный ответ
            user[1] = True                                          # O(1) активируем нашего пользователя
        # отображаем контент полльзователю если все впорядке
        input('Content please\nPress any button for exit:\n')       # O(1)


check_reg()
