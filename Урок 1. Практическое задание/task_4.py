"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""


# 1 способ


def activation_check_1(arr):
    for i in range(len(arr)):
        if arr[i]['activation']:
            print('Доступ разрешен.')
        else:
            print('Активируйте свой аккаунт.')


# 2 способ

def activation_check_2(arr):
    for i in users:
        if i['activation']:
            print('Доступ разрешен.')
        else:
            print('Активируйте свой аккаунт.')


users = [
    {'name': 'user1', 'password': 12345, 'activation': True},
    {'name': 'user2', 'password': 54321, 'activation': False},
    {'name': 'user2', 'password': 54321, 'activation': True}
]

activation_check_1(users)
print('#' * 40)
activation_check_2(users)

'''
что-то я написал одно и то же, только разными "фломастерами", не идёт что-то другое в голову...
Сложность O(n)
'''
