"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""


users_list = [["user"+str(x), "parole"+str(x), activate == True] for x in range(5) for activate in range(1)]

for i in range(0, 5, 2):
    users_list[i][2] = True


def log_in():
    login = input("Введите логин: ")
    parole = input("Введите пароль: ")
    count = 0
    for user in users_list:
        if user[0] == login and user[1] == parole:
            if user[2]:
                print("Вы залогинились")
            else:
                print("Ваша учетная запись должна быть активирована")
        else:
            count += 1
    if count == len(users_list):
        print("Такого пользователя не существует")


log_in()

'''_________________________________________________________________'''


users_dict = {"user0": ['parole0', 'activated'], "user1": ['parole1', 'notactivated'],
              "user2": ['parole2', 'activated'], "user3": ['parole3', 'notactivated'],
              "user4": ['parole4', 'activated'], "user5": ['parole5', 'notactivated']}


def log_in():
    login = input("Введите логин: ")
    parole = input("Введите пароль: ")
    count = 0
    for user in users_dict.keys():
        if user == login:
            inner_parole, status = users_dict.get(login)
            if inner_parole == parole:
                if status == 'activated':
                    print("Вы залогинились")
                else:
                    print("Ваша учетная запись должна быть активирована")
            else:
                print("Вы ввели неправильный пароль")
        else:
            count += 1
    if count == len(users_dict):
        print("Такого пользователя не существует")


log_in()


"""В обоих решениях сложность составляет O(n)"""
