"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""


def metod_1(users: dict, name, password):
    if users.get(name):
        if users[name]['password'] == password and users[name]['activ']:
            return f'Добро пожаловать! {name}'
        elif users[name]['password'] == password and not users[name]['activ']:
            return 'Ваша учетная запись не активирована! Пройдите активацию!'
        elif users[name]['password'] != password:
            return 'Пароль неверный! Проверьте раскладку клавиатуры!'
    else:
        return 'Этот пользователь не зарегистрирован! Пройдите регистрацию!'


def metod_2(users: dict, name, password):
    for key, value in users.items():
        if key == name:
            if value['password'] == password and value['activ']:
                return f'Добро пожаловать! {name}'
            elif value['password'] == password and not value['activ']:
                return 'Ваша учетная запись не активирована! Пройдите активацию!'
            elif value['password'] != password:
                return 'Пароль неверный! Проверьте раскладку клавиатуры!'
    return 'Этот пользователь не зарегистрирован! Пройдите регистрацию!'


users = {
    'user_1': {'password': '123123', 'activ': True},
    'user_2': {'password': '321321', 'activ': False},
    'user_3': {'password': '543543', 'activ': False},
    'user_4': {'password': '345345', 'activ': True},
    'user_5': {'password': '978978', 'activ': True}
}

print(metod_1(users, 'user_1', '123123'))
print(metod_2(users, 'user_1', '123123'))
print(metod_1(users, 'user_3', '543543'))
print(metod_2(users, 'user_3', '543543'))
print(metod_1(users, 'user_4', '543543'))
print(metod_2(users, 'user_4', '543543'))
print(metod_1(users, 'user_7', '123123'))
print(metod_2(users, 'user_7', '123123'))

'''
подобный пример показывали на основах поэтому я знал решение с get!
'''
