"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
print('Первый вариант - сложность O(n):')

objects_1 = [{"login": "Masha", "passw": "qwerty", "auth": True}, {"login": "Dasha", "passw": "12345", "auth": False},
             {"login": "Glasha", "passw": "love", "auth": False}]


def check_user_1(uname, upass):
    for el in objects_1:  # O(n)
        if el["login"] == uname:  # O(1)
            if el["passw"] == upass:  # O(1)
                if el["auth"]:  # O(1)
                    print('Добро пожаловать!')
                    break
                else:
                    print('Вам необходимо пройти активацию!')
                    break
            else:
                print('Пароль неверный!')
                break
    else:
        print('Такого пользователя не существует!')


check_user_1(input('Представьтесь пожалуйста:     '), input('Введите пароль:      '))

print('Второй вариант - сложность O(1):')

objects_2 = {"Masha": {"passw": "qwerty", "auth": True}, "Dasha": {"passw": "12345", "auth": False},
             "Glasha": {"passw": "love", "auth": False}}


def check_user_2(uname, upass):
    el = objects_2.get(uname)           # O(1)
    if el is not None:                  # O(1)
        if el["passw"] == upass:        # O(1)
            if el["auth"]:              # O(1)
                print('Добро пожаловать!')
            else:
                print('Вам необходимо пройти активацию!')
        else:
            print('Пароль неверный!')
    else:
        print('Такого пользователя не существует!')


check_user_2(input('Представьтесь пожалуйста:     '), input('Введите пароль:      '))
