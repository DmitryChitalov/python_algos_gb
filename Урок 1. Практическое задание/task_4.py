"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

users_lst = {"user_1": {"pass": "123456", "activated": True},
         "user_2": {"pass": "qwerty", "activated": False},
         "user_3": {"pass": "asdfgh", "activated": False},
         "user_4": {"pass": "zxcvbn", "activated": True}}

# Сложность O(1)
def auth1(users, login, password):
    if users.get(login):
        if users[login]['pass'] == password and users[login]['activated']:
            return f"Добро пожаловать, {login}!"
        elif users[login]['pass'] == password and not users[login]['activated']:
            return f"Учетная запись не активирована!"
        elif users[login]['pass'] != password:
            return f"Не верный пароль"
    else:
        return "Такого пользователя не существует"


# Сложность O(N)
def auth2(users, login, password):
    for user in users_lst:
        if user == login:
            if users[user]['pass'] == password and users[user]['activated']:
                return f"Добро пожаловать, {login}!"
            elif users[user]['pass'] == password and not users[user]['activated']:
                return f"Учетная запись не активирована!"
            elif users[user]['pass'] != password:
                return f"Не верный пароль"
    return "Такого пользователя не существует"

print(auth1(users_lst, 'user_2', 'qwerty'))
print(auth2(users_lst, 'user_2', 'qwerty'))