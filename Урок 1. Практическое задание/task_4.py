"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

users = {
    "Nik": {
        "password": "abc123",
        "is_active": True
    },
    "Gleb": {
        "password": "abc122",
        "is_active": True
    },
    "Jeb": {
        "password": "abc123",
        "is_active": False
    },
}


def auth_1(user_name, password):
    if users.get(user_name):
        if password == users[user_name]["password"]:
            if users[user_name]["is_active"]:
                return f"{user_name}, доступ разрешен!"
            else:
                return f"{user_name}, ваш аккаунт не активен! Хотите пройти активацию?"
        else:
            return "Пароль неверный!"
    else:
        return f"Пользователя {user_name} не существует!"


def auth_2(user_name, password):
    for uname, attr in users.items():
        if uname == user_name:
            if password == attr["password"]:
                if attr["is_active"]:
                    return f"{user_name}, доступ разрешен!"
                else:
                    return f"{user_name}, ваш аккаунт не активен! Хотите пройти активацию?"
            else:
                return "Пароль неверный!"

    return f"Пользователя {user_name} не существует!"


print(auth_1("Jeb", "abc123"))  # сложность O(1)
print(auth_2("Jeb", "abc123"))  # сложность O(N)
