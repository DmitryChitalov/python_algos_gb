"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
users = {
    'user1': {'pass': 123456, 'authentication': True},
    'user2': {'pass': 11111, 'authentication': False},
    'user3': {'pass': 222222, 'authentication': True}
}


# Общая сложность O(n)
def authentication(hash_users, user_name, user_pass):
    for hash_name, hash_pass in hash_users.items():  # O(n)
        # print(u_n, '#:#', pasv['pass'], ':', pasv['authentication'])
        if user_name == hash_name and user_pass == hash_pass['pass']:  # O(1)
            if not hash_pass['authentication']:  # вложеная проверка на активность учетной записи O(1)
                return 'Учетная запись не активна!\nАктивируйте её и перезайдите!'  # O(1)
            else:
                # print(hash_name, ':', hash_pass['pass'])
                return f"\tДобро пожаловать!\nСтатус учетной записи: {hash_pass['authentication']}"
        elif user_name == hash_name and user_pass != hash_pass['pass']:
            return "Ошибка ввода пароля!\nПопробуйте еще раз"
        elif user_name != hash_name and user_pass == hash_pass['pass']:
            return "Ошибка ввода логина!\nПопробуйте еще раз!"

        return "Такого пользователя не существует!!\nСоздайте аккаунт"


# login = input("Введите имя пользователя: ")
login = 'user1'
# passvd = input("Введите пароль: ")
# passvd= int(passvd)
passvd = 123456
print(authentication(users, login, passvd))

print('#' * 30)

login = 'user1'
passvd = 124456

if users.get(login):
    if users[login]['pass'] == passvd:
        if not users[login]['authentication']:  # вложеная проверка на активность учетной записи O(1)
            print('Учетная запись не активна!\nАктивируйте её и перезайдите!')  # O(1)
        else:
            # print(hash_name, ':', hash_pass['pass'])
            print(f"\tДобро пожаловать!\nСтатус учетной записи: {users[login]['authentication']}")
    elif users[login]['pass'] != passvd:
        print("\tОшибка ввода пароля!\nПопробуйте еще раз")

else:
    print("Такого пользователя не существует!!\nСоздайте аккаунт")
