"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
# Вариант 1. Сложность: O(n)
data = {
    'Maria': ['23423', 1],
    'Viktor': ['gdfg4', 1],
    'Lis': ['ffsd', 0],
    'Dave': ['12345', 1]
}


def autontific(name, passwd):
    for key, value in data.items():
        if key == name:
            if value[0] == passwd:
                return 'Добро пожаловать'
            elif value[1] == 0:
                return 'Вы не прошли авторизацию'
            elif value[0] != passwd:
                return 'Введен не правильный пароль'
    return 'Пользователь с таким имененм не найден'


print(autontific('Maria', '2fd'))  # Задаем существующего пользователя но с неправильным паролем
print(autontific('Maria', '23423'))  # Все данные верны
print(autontific('Lis', '23423'))  # Пользователь который не прошёл авторизацию

# ------------------------------------------------------------------------------------------------------------------


# Вариант 2. Сложность: O(1)
def authorization(users, user_name, user_password):
    if users.get(user_name):
        if users[user_name]['password'] == user_password and users[user_name]['activation']:
            return 'access granted'
        elif users[user_name]['password'] == user_password and not users[user_name]['activation']:
            return 'account not activated'
        elif users[user_name]['password'] != user_password:
            return 'access denied'
    else:
        return "user's not found"


my_users = {
    'user1': {'password': '1111', 'activation': True},
    'user2': {'password': '1111', 'activation': False},
    'user3': {'password': '1111', 'activation': True},
}
print(authorization(my_users, 'user4', '1111'))

# ----------------------------------------------------------------------------------------------
# Вариант два является более эффективным так как в нем не использвуются циклы, а только встроенные функции
