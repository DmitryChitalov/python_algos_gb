"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""


def authorize1():
    user_input_login = input('Введите логин: ')
    user_input_pass = input('Введите пароль: ')
    for note in storage:
        if user_input_login == note['login']:
            if user_input_pass == note['pass']:
                if not note['is_active']:
                    print('Ваша учетная запись неактивна, активируйте ее через email')
                    return
                else:
                    print('Вы попали в систему')
                    return
    else:
        print('Вы ввели неверный логин или пароль!')
        authorize1()

# Вычислительная сложность authorize1 = O(n), так как линейную сложность дает цикл
# for,а вложенные операции - константны и не увеличивают сложность


def authorize2():
    user_input_login = input('Введите логин: ')
    user_input_pass = input('Введите пароль: ')
    logins = [note['login'] for note in storage]
    passwds = [note['pass'] for note in storage]
    activate = [note['is_active'] for note in storage]
    try:
        idx = logins.index(user_input_login)
    except ValueError:
        print('Вы ввели неверный логин или пароль!')
        authorize2()
    if user_input_pass == passwds[idx]:
        if not activate[idx]:
            print('Ваша учетная запись неактивна, активируйте ее через email')
            return
        else:
            print('Вы попали в систему')
            return
    else:
        print('Вы ввели неверный логин или пароль!')
        authorize2()

# Второй способ небезопасный и сложный. Вычислительная сложность = O(4n), поскольку
# последовательно идут 3 генератора списка и list.index. Константные операции опустил


storage = [{
    'login': 'admin',
    'pass': '123',
    'is_active': True
}, {
    'login': 'user',
    'pass': '456',
    'is_active': False
}]

# authorize1()
authorize2()