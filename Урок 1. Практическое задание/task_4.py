"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

all_users = {'login1': {'password': 12345, 'active': True}, 'login2': {'password': 54321, 'active': False},
             'login3': {'password':3456,'active':True},'login4': {'password':345656,'active':False},
             'login5': {'password':333456,'active':False},'login6': {'password':2234,'active':True}}

def aut(user_dic,login,password):
    if user_dic.get(login):
        if user_dic[login]['password']==password and user_dic[login]['active']:
            return "Welcome!"
        elif user_dic[login]['password']==password and not user_dic[login]['active']:
            return "You need to activate account"
        elif user_dic[login]['password']!= password:
            return "Wrong password"
    else:
        return "Account not found"

print(aut(all_users,'login7',12345))


