"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
companies = {
    'Газпром': 98,
    'Лукойл': 65,
    'Роснефть': 84,
    'Башнефть': 51,
    'Эксонойл': 49
}

# O(n Log n)
val_comp_var1 = []  # O(1)

for i in companies.values():  # O(n)
    val_comp_var1.append(i)  # O(n)

val_comp_var1.sort()  # O(n Log n)
val_comp_var1.reverse()  # O(n)

print(val_comp_var1[0:3])

##########################################

# O(n Log n)
val_comp_var2 = list(companies.items())  # O(1)
val_comp_var2.sort(key=lambda j: j[1])  # O(n Log n)

for i in val_comp_var2:  # O(n)
    _tmp = val_comp_var2[2:5]  # O(n)
print(_tmp)

###########################################
# O(n)
lst_val = []  # O(1)
val_comp_var3 = []  # O(1)

high_val = max(companies.values())  # O(n)
val_comp_var3.append(high_val)  # O(1)

for i in companies.values():  # O(n)
    if i < high_val:  # O(n)
        lst_val.append(i)  # O(1)

mid_val = max(lst_val)  # O(1)
val_comp_var3.append(mid_val)  # O(1)

lst_val.clear()  # O(1)
for i in companies.values():  # O(n)
    if i < mid_val:  # O(n)
        lst_val.append(i)  # O(1)

low_val = max(lst_val)  # O(n)
val_comp_var3.append(low_val)  # O(1)

print(val_comp_var3)

# Судя по всему решение №3. Строчек больше, но сложность меньше.
