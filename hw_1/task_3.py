"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


def max_profit(company_dict):
    """
    Для данного решения:
    Сложность составит O(NlogN)
    """
    sort_profit = list(company_dict.values())
    sort_profit.sort()
    res_profit_dict = {}
    for key, value in company_dict.items():
        if len(res_profit_dict) == 3:
            break
        if value in sort_profit[-3:]:
            res_profit_dict[key] = value
    return res_profit_dict


def max_profit1(company_dict):
    """
    Для данного решения:
    Сложность составит O(3N)
    Данное решение предпочтительнее
    """
    res_profit_dict = {}
    for i in range(3):
        key_max = "0"
        maximum = 0
        for key, value in company_dict.items():
            if value >= maximum:
                key_max = key
                maximum = value
        res_profit_dict[key_max] = maximum
        company_dict.pop(key_max)
    return res_profit_dict


print(max_profit1({"1": 125000, "2": 125000, "3": 15000, "4": 1000, "5": 125000, "6": 125000}))
